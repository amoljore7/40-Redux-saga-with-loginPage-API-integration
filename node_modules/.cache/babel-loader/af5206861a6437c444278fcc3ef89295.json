{"ast":null,"code":"import { put, takeLatest } from \"redux-saga/effects\";\nimport { GET_EMPLOYEES_LIST, GET_SINGLE_EMPLOYEE, GET_EMPLOYEES_LIST_SUCCESS, GET_EMPLOYEES_LIST_FAIL, GET_SINGLE_EMPLOYEE_SUCCESS, GET_SINGLE_EMPLOYEE_FAIL, ADD_EMPLOYEE_SUCCESS, ADD_EMPLOYEES_LIST_SUCCESS, ADD_EMPLOYEES_LIST_FAIL, ADD_EMPLOYEE_FAIL, SET_LOADING, EDIT_EMPLOYEE, EDIT_EMPLOYEE_SUCCESS, EDIT_EMPLOYEE_FAIL, GET_PROJECTS, GET_LOCATIONS, GET_LOCATIONS_SUCCESS, GET_LOCATIONS_FAIL, GET_PROJECTS_SUCCESS, GET_PROJECTS_FAIL, GET_MANAGER_LIST_SUCCESS } from \"../actions/employee/employeeTypes\";\nimport Axios from \"axios\";\nimport { SUCCESS_MESSAGE, ERROR_MESSAGE } from \"../actions/auth/authTypes\";\nexport function* getEmployeeList({\n  payload\n}) {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const employeeList = yield Axios.get(`/employees/`, payload).then(res => res.data);\n\n    if (payload.forManager) {\n      yield put({\n        type: GET_MANAGER_LIST_SUCCESS,\n        payload: employeeList\n      });\n    } else {\n      yield put({\n        type: GET_EMPLOYEES_LIST_SUCCESS,\n        payload: employeeList\n      });\n    }\n  } catch (err) {\n    yield put({\n      type: GET_EMPLOYEES_LIST_FAIL,\n      payload: err.response.data\n    });\n    let msg = {\n      id: 1,\n      text: \"Failed to process request\"\n    };\n    yield put({\n      type: ERROR_MESSAGE,\n      payload: msg\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\nexport function* getEmployeeDetails({\n  payload\n}) {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const employeeDetails = yield Axios.get(`/employees/${payload}`).then(res => res.data);\n    yield put({\n      type: GET_SINGLE_EMPLOYEE_SUCCESS,\n      payload: employeeDetails\n    });\n  } catch (err) {\n    yield put({\n      type: GET_SINGLE_EMPLOYEE_FAIL,\n      payload: err.response.data\n    });\n    let msg = {\n      id: 1,\n      text: \"Failed to process request\"\n    };\n    yield put({\n      type: ERROR_MESSAGE,\n      payload: msg\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\nexport function* addEmployee({\n  payload\n}) {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const employee = yield Axios.post(\"/employees/\", payload).then(res => res.data);\n    let msg = {\n      id: 1,\n      text: \"Employee Added successfully.\"\n    };\n    yield put({\n      type: ADD_EMPLOYEE_SUCCESS,\n      payload: employee\n    });\n    yield put({\n      type: SUCCESS_MESSAGE,\n      payload: msg\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_EMPLOYEE_FAIL,\n      payload: err.response.data\n    });\n    let msg = {\n      id: 1,\n      text: \"fill Presonal & Business Details currectly\"\n    };\n    yield put({\n      type: ERROR_MESSAGE,\n      payload: msg\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\nexport function* addEmployeeList({\n  payload\n}) {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const employeeList = yield Axios.post(`/employees/bulkupload/${payload.filename}`, payload.formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(res => res.data);\n    let msg = {\n      id: 1,\n      text: \"List Uploaded successfully.\"\n    };\n    yield put({\n      type: ADD_EMPLOYEES_LIST_SUCCESS,\n      payload: employeeList\n    });\n    yield put({\n      type: SUCCESS_MESSAGE,\n      payload: msg\n    });\n  } catch (err) {\n    const errData = [];\n    err.response.data && err.response.data.map(val => {\n      for (let key in val.Description) {\n        errData.push({\n          no: val.Record_Number + 1,\n          row: key,\n          msg: val.Description[key].join()\n        });\n      }\n\n      return val;\n    });\n    yield put({\n      type: ADD_EMPLOYEES_LIST_FAIL,\n      payload: errData\n    });\n    let msg = {\n      id: 1,\n      text: \"Failed to upload data\"\n    };\n    yield put({\n      type: ERROR_MESSAGE,\n      payload: msg\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\nexport function* editEmployee({\n  payload\n}) {\n  yield put({\n    type: SET_LOADING\n  });\n  const id = payload.ID;\n  payload.ID = undefined;\n\n  try {\n    const employee = yield Axios.put(`/employees/${id}`, payload).then(res => res.data);\n    let msg = {\n      id: 1,\n      text: \"Updated successfully.\"\n    };\n    yield put({\n      type: EDIT_EMPLOYEE_SUCCESS,\n      payload: employee\n    });\n    yield put({\n      type: SUCCESS_MESSAGE,\n      payload: msg\n    });\n  } catch (err) {\n    yield put({\n      type: EDIT_EMPLOYEE_FAIL,\n      payload: err.response.data\n    });\n    let msg = {\n      id: 1,\n      text: \"Failed to update fill Presonal & Business Details currectly\"\n    };\n    yield put({\n      type: ERROR_MESSAGE,\n      payload: msg\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\nexport function* getLocations() {\n  try {\n    const locations = yield Axios.get(`/locations`).then(res => res.data);\n    yield put({\n      type: GET_LOCATIONS_SUCCESS,\n      payload: locations\n    });\n  } catch (err) {\n    yield put({\n      type: GET_LOCATIONS_FAIL,\n      payload: err.response.data\n    });\n  }\n}\nexport function* getProjects() {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const projects = yield Axios.get(`/projects`).then(res => res.data);\n    yield put({\n      type: GET_PROJECTS_SUCCESS,\n      payload: projects\n    });\n  } catch (err) {\n    yield put({\n      type: GET_PROJECTS_FAIL,\n      payload: err.response.data\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\nexport function* employeeActionWatcher() {\n  yield takeLatest(GET_EMPLOYEES_LIST, getEmployeeList);\n  yield takeLatest(GET_SINGLE_EMPLOYEE, getEmployeeDetails);\n  yield takeLatest(ADD_EMPLOYEE, addEmployee);\n  yield takeLatest(ADD_EMPLOYEES_LIST, addEmployeeList);\n  yield takeLatest(EDIT_EMPLOYEE, editEmployee);\n  yield takeLatest(GET_LOCATIONS, getLocations);\n  yield takeLatest(GET_PROJECTS, getProjects);\n}","map":{"version":3,"sources":["/home/amol/Desktop/MACE/src/sagas/employee.sagas.js"],"names":["put","takeLatest","GET_EMPLOYEES_LIST","GET_SINGLE_EMPLOYEE","GET_EMPLOYEES_LIST_SUCCESS","GET_EMPLOYEES_LIST_FAIL","GET_SINGLE_EMPLOYEE_SUCCESS","GET_SINGLE_EMPLOYEE_FAIL","ADD_EMPLOYEE_SUCCESS","ADD_EMPLOYEES_LIST_SUCCESS","ADD_EMPLOYEES_LIST_FAIL","ADD_EMPLOYEE_FAIL","SET_LOADING","EDIT_EMPLOYEE","EDIT_EMPLOYEE_SUCCESS","EDIT_EMPLOYEE_FAIL","GET_PROJECTS","GET_LOCATIONS","GET_LOCATIONS_SUCCESS","GET_LOCATIONS_FAIL","GET_PROJECTS_SUCCESS","GET_PROJECTS_FAIL","GET_MANAGER_LIST_SUCCESS","Axios","SUCCESS_MESSAGE","ERROR_MESSAGE","getEmployeeList","payload","type","employeeList","get","then","res","data","forManager","err","response","msg","id","text","getEmployeeDetails","employeeDetails","addEmployee","employee","post","addEmployeeList","filename","formData","headers","errData","map","val","key","Description","push","no","Record_Number","row","join","editEmployee","ID","undefined","getLocations","locations","getProjects","projects","employeeActionWatcher","ADD_EMPLOYEE","ADD_EMPLOYEES_LIST"],"mappings":"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","sourcesContent":["import { put, takeLatest } from \"redux-saga/effects\";\nimport {\n  GET_EMPLOYEES_LIST,\n  GET_SINGLE_EMPLOYEE,\n  GET_EMPLOYEES_LIST_SUCCESS,\n  GET_EMPLOYEES_LIST_FAIL,\n  GET_SINGLE_EMPLOYEE_SUCCESS,\n  GET_SINGLE_EMPLOYEE_FAIL,\n  ADD_EMPLOYEE_SUCCESS,\n  ADD_EMPLOYEES_LIST_SUCCESS,\n  ADD_EMPLOYEES_LIST_FAIL,\n  ADD_EMPLOYEE_FAIL,\n  SET_LOADING,\n  EDIT_EMPLOYEE,\n  EDIT_EMPLOYEE_SUCCESS,\n  EDIT_EMPLOYEE_FAIL,\n  GET_PROJECTS,\n  GET_LOCATIONS,\n  GET_LOCATIONS_SUCCESS,\n  GET_LOCATIONS_FAIL,\n  GET_PROJECTS_SUCCESS,\n  GET_PROJECTS_FAIL,\n  GET_MANAGER_LIST_SUCCESS,\n} from \"../actions/employee/employeeTypes\";\nimport Axios from \"axios\";\nimport { SUCCESS_MESSAGE, ERROR_MESSAGE } from \"../actions/auth/authTypes\";\n\nexport function* getEmployeeList({ payload }) {\n  yield put({ type: SET_LOADING });\n  try {\n    const employeeList = yield Axios.get(`/employees/`, payload).then(\n      (res) => res.data\n    );\n    if (payload.forManager) {\n      yield put({ type: GET_MANAGER_LIST_SUCCESS, payload: employeeList });\n    } else {\n      yield put({ type: GET_EMPLOYEES_LIST_SUCCESS, payload: employeeList });\n    }\n  } catch (err) {\n    yield put({ type: GET_EMPLOYEES_LIST_FAIL, payload: err.response.data });\n    let msg = {\n      id: 1,\n      text: \"Failed to process request\",\n    };\n    yield put({ type: ERROR_MESSAGE, payload: msg });\n  }\n  yield put({ type: SET_LOADING });\n}\n\nexport function* getEmployeeDetails({ payload }) {\n  yield put({ type: SET_LOADING });\n  try {\n    const employeeDetails = yield Axios.get(`/employees/${payload}`).then(\n      (res) => res.data\n    );\n    yield put({ type: GET_SINGLE_EMPLOYEE_SUCCESS, payload: employeeDetails });\n  } catch (err) {\n    yield put({ type: GET_SINGLE_EMPLOYEE_FAIL, payload: err.response.data });\n    let msg = {\n      id: 1,\n      text: \"Failed to process request\",\n    };\n    yield put({ type: ERROR_MESSAGE, payload: msg });\n  }\n  yield put({ type: SET_LOADING });\n}\n\nexport function* addEmployee({ payload }) {\n  yield put({ type: SET_LOADING });\n  try {\n    const employee = yield Axios.post(\"/employees/\", payload).then(\n      (res) => res.data\n    );\n    let msg = {\n      id: 1,\n      text: \"Employee Added successfully.\",\n    };\n    yield put({ type: ADD_EMPLOYEE_SUCCESS, payload: employee });\n    yield put({ type: SUCCESS_MESSAGE, payload: msg });\n  } catch (err) {\n    yield put({ type: ADD_EMPLOYEE_FAIL, payload: err.response.data });\n    let msg = {\n      id: 1,\n      text: \"fill Presonal & Business Details currectly\",\n    };\n    yield put({ type: ERROR_MESSAGE, payload: msg });\n  }\n  yield put({ type: SET_LOADING });\n}\n\nexport function* addEmployeeList({ payload }) {\n  yield put({ type: SET_LOADING });\n  try {\n    const employeeList = yield Axios.post(\n      `/employees/bulkupload/${payload.filename}`,\n      payload.formData,\n      {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      }\n    ).then((res) => res.data);\n    let msg = {\n      id: 1,\n      text: \"List Uploaded successfully.\",\n    };\n    yield put({ type: ADD_EMPLOYEES_LIST_SUCCESS, payload: employeeList });\n    yield put({ type: SUCCESS_MESSAGE, payload: msg });\n  } catch (err) {\n    const errData = [];\n    err.response.data &&\n      err.response.data.map((val) => {\n        for (let key in val.Description) {\n          errData.push({\n            no: val.Record_Number + 1,\n            row: key,\n            msg: val.Description[key].join(),\n          });\n        }\n        return val;\n      });\n    yield put({ type: ADD_EMPLOYEES_LIST_FAIL, payload: errData });\n    let msg = {\n      id: 1,\n      text: \"Failed to upload data\",\n    };\n    yield put({ type: ERROR_MESSAGE, payload: msg });\n  }\n  yield put({ type: SET_LOADING });\n}\n\nexport function* editEmployee({ payload }) {\n  yield put({ type: SET_LOADING });\n  const id = payload.ID;\n  payload.ID = undefined;\n  try {\n    const employee = yield Axios.put(`/employees/${id}`, payload).then(\n      (res) => res.data\n    );\n    let msg = {\n      id: 1,\n      text: \"Updated successfully.\",\n    };\n    yield put({ type: EDIT_EMPLOYEE_SUCCESS, payload: employee });\n    yield put({ type: SUCCESS_MESSAGE, payload: msg });\n  } catch (err) {\n    yield put({ type: EDIT_EMPLOYEE_FAIL, payload: err.response.data });\n    let msg = {\n      id: 1,\n      text: \"Failed to update fill Presonal & Business Details currectly\",\n    };\n    yield put({ type: ERROR_MESSAGE, payload: msg });\n  }\n  yield put({ type: SET_LOADING });\n}\n\nexport function* getLocations() {\n  try {\n    const locations = yield Axios.get(`/locations`).then((res) => res.data);\n    yield put({ type: GET_LOCATIONS_SUCCESS, payload: locations });\n  } catch (err) {\n    yield put({ type: GET_LOCATIONS_FAIL, payload: err.response.data });\n  }\n}\n\nexport function* getProjects() {\n  yield put({ type: SET_LOADING });\n  try {\n    const projects = yield Axios.get(`/projects`).then((res) => res.data);\n    yield put({ type: GET_PROJECTS_SUCCESS, payload: projects });\n  } catch (err) {\n    yield put({ type: GET_PROJECTS_FAIL, payload: err.response.data });\n  }\n  yield put({ type: SET_LOADING });\n}\n\nexport function* employeeActionWatcher() {\n  yield takeLatest(GET_EMPLOYEES_LIST, getEmployeeList);\n  yield takeLatest(GET_SINGLE_EMPLOYEE, getEmployeeDetails);\n  yield takeLatest(ADD_EMPLOYEE, addEmployee);\n  yield takeLatest(ADD_EMPLOYEES_LIST, addEmployeeList);\n  yield takeLatest(EDIT_EMPLOYEE, editEmployee);\n  yield takeLatest(GET_LOCATIONS, getLocations);\n  yield takeLatest(GET_PROJECTS, getProjects);\n}\n"]},"metadata":{},"sourceType":"module"}