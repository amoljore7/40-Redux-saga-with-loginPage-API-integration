{"ast":null,"code":"var _jsxFileName = \"/home/amol/Desktop/MACE/src/components/pages/dashboard/dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Input, Button, Select, Modal, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport BulkUpload from \"../bulkupload/BulkUpload\";\nimport EditEmployee from \"../editemployee/EditEmployee\";\nimport ShowEmployee from \"../showemployee/ShowEmployee\";\nimport { CloudUploadOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport { getEmployeeList, getLocations, getProjects } from \"../../../actions/employee/employeeActions\"; // import { units, statusList } from \"../../utils/optionsList\";\n\nconst {\n  Option\n} = Select;\nconst {\n  Search\n} = Input;\n\nconst Dashboard = props => {\n  const paginationConfig = {\n    defaultPageSize: 5,\n    showSizeChanger: true,\n    pageSizeOptions: [\"5\", \"10\", \"20\", \"50\", \"100\"]\n  };\n  const [data, setData] = useState([]);\n  const [pagination, setPagination] = useState(paginationConfig);\n  const [loading, setLoading] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [selectModal, setSelectModal] = useState(\"\");\n  const [searchParams, setSearchParams] = useState({});\n  const [showEmp, setShowEmp] = useState(\"\");\n  const [projects, setProjects] = useState(null);\n  const [locations, setLocations] = useState([]);\n  useEffect(() => {\n    fetch();\n    props.getLocations();\n    props.getProjects(); //eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    if (props.employee.locations.length > 0) {\n      let locationList = props.employee.locations.map(loc => {\n        return {\n          text: loc.ADDRESS,\n          value: loc.ID\n        };\n      });\n      setLocations(locationList);\n    }\n  }, [props.employee.locations]);\n  useEffect(() => {\n    if (props.messages.success.length > 0 && showModal) {\n      handleModal(null, null);\n      setSearchParams({});\n      setPagination({ ...pagination,\n        current: 1\n      });\n    }\n  }, [props.messages.success]);\n  useEffect(() => {\n    if (props.employee.projects.length > 0) {\n      setProjects(props.employee.projects);\n    }\n  }, [props.employee.projects]);\n\n  const handleModal = (name, id) => {\n    setShowEmp(id);\n    setSelectModal(name);\n    setShowModal(!showModal);\n  };\n\n  const handleTableChange = (pagination, filters, sorter) => {\n    const pager = { ...pagination\n    };\n    pager.current = pagination.current;\n    setPagination(pager);\n\n    if (sorter.field === \"NAME\") {\n      sorter.field = \"FIRSTNAME\";\n    }\n\n    if (sorter.field === \"EMPID\") {\n      sorter.field = \"ID\";\n    }\n\n    fetch({ ...filters,\n      results: pagination.pageSize,\n      page: pagination.current,\n      ordering: sorter.order && sorter.order === \"descend\" ? `-${sorter.field}` : sorter.field,\n      CURRENTLOCATION: filters.CURRENTLOCATION && filters.CURRENTLOCATION.join(),\n      UNIT: filters.UNIT && filters.UNIT.join(),\n      STATUS: filters.STATUS && filters.STATUS.join()\n    });\n  };\n\n  const fetch = (params = {}) => {\n    if (Object.keys(params).length) {\n      setSearchParams({ ...params,\n        offset: params.results * (params.page - 1),\n        limit: params.results,\n        page: undefined,\n        results: undefined\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (searchParams.offset === 0) {\n      setPagination({ ...pagination,\n        current: 1\n      });\n    }\n\n    const payload = {\n      params: {\n        limit: 5,\n        ...searchParams,\n        search: searchInput\n      }\n    };\n    props.getEmployeeList(payload); //eslint-disable-next-line\n  }, [searchParams]);\n  useEffect(() => {\n    if (Object.keys(props.employee.employeeList).length > 0) {\n      const newData = props.employee.employeeList.results.map(emp => {\n        return { ...emp,\n          NAME: {\n            FIRSTNAME: emp.FIRSTNAME,\n            LASTNAME: emp.LASTNAME\n          }\n        };\n      });\n      const paginationData = { ...pagination\n      };\n      paginationData.total = props.employee.employeeList.count;\n      setData(newData);\n      setPagination(paginationData);\n      setLoading(false);\n    }\n  }, [props.employee.employeeList]);\n  const columns = [{\n    title: \"Emp Id\",\n    dataIndex: \"EMPID\",\n    sorter: true\n  }, {\n    title: \"Name\",\n    dataIndex: \"NAME\",\n    sorter: true,\n    render: NAME => NAME.FIRSTNAME + \" \" + NAME.LASTNAME\n  }, {\n    title: \"Email\",\n    dataIndex: \"EMAIL\"\n  }, {\n    title: \"Address\",\n    dataIndex: \"CURRENTLOCATION\",\n    render: CURRENTLOCATION => CURRENTLOCATION && CURRENTLOCATION.ADDRESS,\n    filters: [...locations]\n  }, {\n    title: \"Unit\",\n    dataIndex: \"UNIT\",\n    filters: units.map(unit => {\n      return {\n        text: unit.name,\n        value: unit.value\n      };\n    })\n  }, {\n    title: \"Status\",\n    dataIndex: \"STATUS\"\n  }, {\n    title: \"Action\",\n    dataIndex: \"EMPID\",\n    render: EMPID => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      size: \"small\",\n      className: \"m-1 show-emp\",\n      onClick: () => handleModal(\"show\", EMPID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, \"Show\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      size: \"small\",\n      className: \"m-1 edit-emp\",\n      onClick: () => handleModal(\"edit\", EMPID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, \"Edit\"))\n  }];\n  const selectBefore = /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"\",\n    style: {\n      width: 140\n    },\n    className: \"select-before\",\n    onChange: value => setSearchParams({ ...searchParams,\n      STATUS: value,\n      offset: 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, \"Filter by Status\"), statusList.map(st => /*#__PURE__*/React.createElement(Option, {\n    key: st.id,\n    value: st.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, st.name)));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, \"Employees\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-3 d-flex flex-column justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 w-sm-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    addonBefore: selectBefore,\n    placeholder: \"Search by Name and EmpId\",\n    enterButton: \"Search\",\n    size: \"large\",\n    onChange: e => setSearchInput(e.target.value),\n    onSearch: () => setSearchParams({ ...searchParams,\n      search: searchInput,\n      offset: 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button.Group, {\n    className: \"my-sm-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      margin: \"0 2px\"\n    },\n    size: \"large\",\n    onClick: () => handleModal(\"add\"),\n    id: \"add-emp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }), \"Add Employee\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      margin: \"0 2px\"\n    },\n    size: \"large\",\n    onClick: () => handleModal(\"upload\"),\n    id: \"upload-emp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloudUploadOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }), \"Add Employee List\"))), /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    columns: columns,\n    rowKey: ID => ID,\n    dataSource: data,\n    pagination: pagination,\n    loading: loading,\n    onChange: handleTableChange,\n    className: \"overflow-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: showModal,\n    onCancel: handleModal,\n    footer: null,\n    maskClosable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, selectModal === \"upload\" && /*#__PURE__*/React.createElement(BulkUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 38\n    }\n  }), selectModal === \"add\" && locations !== null && projects !== null && /*#__PURE__*/React.createElement(EditEmployee, {\n    location: locations,\n    projects: projects,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }), selectModal === \"edit\" && locations !== null && projects !== null && showEmp !== null && /*#__PURE__*/React.createElement(EditEmployee, {\n    empid: showEmp,\n    location: locations,\n    projects: projects,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }), selectModal === \"show\" && /*#__PURE__*/React.createElement(ShowEmployee, {\n    empid: showEmp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 36\n    }\n  })));\n};\n\nDashboard.propTypes = {\n  employee: PropTypes.object,\n  getEmployeeList: PropTypes.func.isRequired,\n  getLocations: PropTypes.func.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  employee: state.employee,\n  messages: state.messages\n});\n\nexport default connect(mapStateToProps, {\n  getEmployeeList,\n  getLocations,\n  getProjects\n})(Dashboard);","map":{"version":3,"sources":["/home/amol/Desktop/MACE/src/components/pages/dashboard/dashboard.js"],"names":["React","useState","useEffect","Table","Input","Button","Select","Modal","message","connect","PropTypes","BulkUpload","EditEmployee","ShowEmployee","CloudUploadOutlined","PlusCircleOutlined","getEmployeeList","getLocations","getProjects","Option","Search","Dashboard","props","paginationConfig","defaultPageSize","showSizeChanger","pageSizeOptions","data","setData","pagination","setPagination","loading","setLoading","searchInput","setSearchInput","showModal","setShowModal","selectModal","setSelectModal","searchParams","setSearchParams","showEmp","setShowEmp","projects","setProjects","locations","setLocations","fetch","employee","length","locationList","map","loc","text","ADDRESS","value","ID","messages","success","handleModal","current","name","id","handleTableChange","filters","sorter","pager","field","results","pageSize","page","ordering","order","CURRENTLOCATION","join","UNIT","STATUS","params","Object","keys","offset","limit","undefined","payload","search","employeeList","newData","emp","NAME","FIRSTNAME","LASTNAME","paginationData","total","count","columns","title","dataIndex","render","units","unit","EMPID","selectBefore","width","statusList","st","e","target","margin","propTypes","object","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Table, Input, Button, Select, Modal, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport BulkUpload from \"../bulkupload/BulkUpload\";\nimport EditEmployee from \"../editemployee/EditEmployee\";\nimport ShowEmployee from \"../showemployee/ShowEmployee\";\nimport { CloudUploadOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\n\nimport {\n  getEmployeeList,\n  getLocations,\n  getProjects,\n} from \"../../../actions/employee/employeeActions\";\n// import { units, statusList } from \"../../utils/optionsList\";\nconst { Option } = Select;\nconst { Search } = Input;\n\nconst Dashboard = (props) => {\n  const paginationConfig = {\n    defaultPageSize: 5,\n    showSizeChanger: true,\n    pageSizeOptions: [\"5\", \"10\", \"20\", \"50\", \"100\"],\n  };\n  const [data, setData] = useState([]);\n  const [pagination, setPagination] = useState(paginationConfig);\n  const [loading, setLoading] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [selectModal, setSelectModal] = useState(\"\");\n  const [searchParams, setSearchParams] = useState({});\n  const [showEmp, setShowEmp] = useState(\"\");\n  const [projects, setProjects] = useState(null);\n  const [locations, setLocations] = useState([]);\n\n  useEffect(() => {\n    fetch();\n    props.getLocations();\n    props.getProjects();\n    //eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (props.employee.locations.length > 0) {\n      let locationList = props.employee.locations.map((loc) => {\n        return {\n          text: loc.ADDRESS,\n          value: loc.ID,\n        };\n      });\n      setLocations(locationList);\n    }\n  }, [props.employee.locations]);\n\n  useEffect(() => {\n    if (props.messages.success.length > 0 && showModal) {\n      handleModal(null, null);\n      setSearchParams({});\n      setPagination({ ...pagination, current: 1 });\n    }\n  }, [props.messages.success]);\n\n  useEffect(() => {\n    if (props.employee.projects.length > 0) {\n      setProjects(props.employee.projects);\n    }\n  }, [props.employee.projects]);\n\n  const handleModal = (name, id) => {\n    setShowEmp(id);\n    setSelectModal(name);\n    setShowModal(!showModal);\n  };\n\n  const handleTableChange = (pagination, filters, sorter) => {\n    const pager = { ...pagination };\n    pager.current = pagination.current;\n    setPagination(pager);\n    if (sorter.field === \"NAME\") {\n      sorter.field = \"FIRSTNAME\";\n    }\n    if (sorter.field === \"EMPID\") {\n      sorter.field = \"ID\";\n    }\n    fetch({\n      ...filters,\n      results: pagination.pageSize,\n      page: pagination.current,\n      ordering:\n        sorter.order && sorter.order === \"descend\"\n          ? `-${sorter.field}`\n          : sorter.field,\n      CURRENTLOCATION:\n        filters.CURRENTLOCATION && filters.CURRENTLOCATION.join(),\n      UNIT: filters.UNIT && filters.UNIT.join(),\n      STATUS: filters.STATUS && filters.STATUS.join(),\n    });\n  };\n\n  const fetch = (params = {}) => {\n    if (Object.keys(params).length) {\n      setSearchParams({\n        ...params,\n        offset: params.results * (params.page - 1),\n        limit: params.results,\n        page: undefined,\n        results: undefined,\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    if (searchParams.offset === 0) {\n      setPagination({ ...pagination, current: 1 });\n    }\n    const payload = {\n      params: {\n        limit: 5,\n        ...searchParams,\n        search: searchInput,\n      },\n    };\n    props.getEmployeeList(payload);\n    //eslint-disable-next-line\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (Object.keys(props.employee.employeeList).length > 0) {\n      const newData = props.employee.employeeList.results.map((emp) => {\n        return {\n          ...emp,\n          NAME: {\n            FIRSTNAME: emp.FIRSTNAME,\n            LASTNAME: emp.LASTNAME,\n          },\n        };\n      });\n      const paginationData = { ...pagination };\n      paginationData.total = props.employee.employeeList.count;\n      setData(newData);\n      setPagination(paginationData);\n      setLoading(false);\n    }\n  }, [props.employee.employeeList]);\n\n  const columns = [\n    {\n      title: \"Emp Id\",\n      dataIndex: \"EMPID\",\n      sorter: true,\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"NAME\",\n      sorter: true,\n      render: (NAME) => NAME.FIRSTNAME + \" \" + NAME.LASTNAME,\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"EMAIL\",\n    },\n    {\n      title: \"Address\",\n      dataIndex: \"CURRENTLOCATION\",\n      render: (CURRENTLOCATION) => CURRENTLOCATION && CURRENTLOCATION.ADDRESS,\n      filters: [...locations],\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"UNIT\",\n      filters: units.map((unit) => {\n        return {\n          text: unit.name,\n          value: unit.value,\n        };\n      }),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"STATUS\",\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"EMPID\",\n      render: (EMPID) => (\n        <div>\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            className=\"m-1 show-emp\"\n            onClick={() => handleModal(\"show\", EMPID)}\n          >\n            Show\n          </Button>\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            className=\"m-1 edit-emp\"\n            onClick={() => handleModal(\"edit\", EMPID)}\n          >\n            Edit\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  const selectBefore = (\n    <Select\n      defaultValue=\"\"\n      style={{ width: 140 }}\n      className=\"select-before\"\n      onChange={(value) =>\n        setSearchParams({ ...searchParams, STATUS: value, offset: 0 })\n      }\n    >\n      <Option value=\"\">Filter by Status</Option>\n      {statusList.map((st) => (\n        <Option key={st.id} value={st.value}>\n          {st.name}\n        </Option>\n      ))}\n    </Select>\n  );\n\n  return (\n    <div className=\"my-3\">\n      <h3>Employees</h3>\n      <div className=\"my-3 d-flex flex-column justify-content-between\">\n        <div className=\"w-50 w-sm-50\">\n          <Search\n            addonBefore={selectBefore}\n            placeholder=\"Search by Name and EmpId\"\n            enterButton=\"Search\"\n            size=\"large\"\n            onChange={(e) => setSearchInput(e.target.value)}\n            onSearch={() =>\n              setSearchParams({\n                ...searchParams,\n                search: searchInput,\n                offset: 0,\n              })\n            }\n          />\n        </div>\n        <Button.Group className=\"my-sm-3\">\n          <Button\n            type=\"primary\"\n            style={{ margin: \"0 2px\" }}\n            size=\"large\"\n            onClick={() => handleModal(\"add\")}\n            id=\"add-emp\"\n          >\n            <PlusCircleOutlined />\n            Add Employee\n          </Button>\n          <Button\n            type=\"primary\"\n            style={{ margin: \"0 2px\" }}\n            size=\"large\"\n            onClick={() => handleModal(\"upload\")}\n            id=\"upload-emp\"\n          >\n            <CloudUploadOutlined />\n            Add Employee List\n          </Button>\n        </Button.Group>\n      </div>\n      <Table\n        bordered\n        columns={columns}\n        rowKey={(ID) => ID}\n        dataSource={data}\n        pagination={pagination}\n        loading={loading}\n        onChange={handleTableChange}\n        className=\"overflow-auto\"\n      />\n      <Modal\n        visible={showModal}\n        onCancel={handleModal}\n        footer={null}\n        maskClosable={false}\n      >\n        {selectModal === \"upload\" && <BulkUpload />}\n        {selectModal === \"add\" && locations !== null && projects !== null && (\n          <EditEmployee location={locations} projects={projects} />\n        )}\n        {selectModal === \"edit\" &&\n          locations !== null &&\n          projects !== null &&\n          showEmp !== null && (\n            <EditEmployee\n              empid={showEmp}\n              location={locations}\n              projects={projects}\n            />\n          )}\n        {selectModal === \"show\" && <ShowEmployee empid={showEmp} />}\n      </Modal>\n    </div>\n  );\n};\nDashboard.propTypes = {\n  employee: PropTypes.object,\n  getEmployeeList: PropTypes.func.isRequired,\n  getLocations: PropTypes.func.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  messages: state.messages,\n});\n\nexport default connect(mapStateToProps, {\n  getEmployeeList,\n  getLocations,\n  getProjects,\n})(Dashboard);\n"]},"metadata":{},"sourceType":"module"}