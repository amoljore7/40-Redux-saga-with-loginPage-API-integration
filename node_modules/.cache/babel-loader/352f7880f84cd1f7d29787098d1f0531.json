{"ast":null,"code":"import { put, takeLatest } from \"redux-saga/effects\";\nimport { GET_EMPLOYEES_LIST, GET_SINGLE_EMPLOYEE, ADD_EMPLOYEE, ADD_EMPLOYEES_LIST, GET_EMPLOYEES_LIST_SUCCESS, GET_EMPLOYEES_LIST_FAIL, GET_SINGLE_EMPLOYEE_SUCCESS, GET_SINGLE_EMPLOYEE_FAIL, ADD_EMPLOYEE_SUCCESS, ADD_EMPLOYEES_LIST_SUCCESS, ADD_EMPLOYEES_LIST_FAIL, ADD_EMPLOYEE_FAIL, SET_LOADING, EDIT_EMPLOYEE, EDIT_EMPLOYEE_SUCCESS, EDIT_EMPLOYEE_FAIL } from \"../actions/employee/employeeTypes\";\nimport Axios from \"axios\";\nconst EmpID = localStorage.getItem('EmpID');\nconsole.log(object);\n\nfunction* getEmployeeList() {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const employeeList = yield fetch(`https://`).then(response => response.json());\n    yield put({\n      type: GET_EMPLOYEES_LIST_SUCCESS,\n      payload: employeeList\n    });\n  } catch (e) {\n    yield put({\n      type: GET_EMPLOYEES_LIST_FAIL,\n      payload: e.message\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\n\nfunction* getEmployeeDetails({\n  payload\n}) {\n  try {\n    const employeeDetails = yield Axios.get(`/employees/${payload}`).then(res => res.data);\n    console.log(employeeDetails);\n\n    if (employeeDetails) {\n      yield put({\n        type: GET_SINGLE_EMPLOYEE_SUCCESS,\n        payload: employeeDetails\n      });\n    } else {\n      yield put({\n        type: GET_SINGLE_EMPLOYEE_FAIL,\n        payload: employeeDetails\n      });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* addEmployee({\n  payload\n}) {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const employee = yield Axios.post(\"/employees/\", payload).then(res => res.data).catch(err => err);\n    yield put({\n      type: ADD_EMPLOYEE_SUCCESS,\n      payload: employee\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_EMPLOYEE_FAIL,\n      payload: e.message\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\n\nfunction* addEmployeeList() {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const employeeList = yield fetch(`https://`).then(response => response.json());\n    yield put({\n      type: ADD_EMPLOYEES_LIST_SUCCESS,\n      payload: employeeList\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_EMPLOYEES_LIST_FAIL,\n      payload: e.message\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\n\nfunction* editEmployee({\n  payload\n}) {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const employee = yield Axios.put(`/employees/${2}`, payload).then(res => res.data).catch(err => err);\n    console.log(\">>>>>>>EDIT>>>>>\", employee);\n    yield put({\n      type: EDIT_EMPLOYEE_SUCCESS,\n      payload: employee\n    });\n  } catch (e) {\n    yield put({\n      type: EDIT_EMPLOYEE_FAIL,\n      payload: e.message\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\n\nexport function* employeeActionWatcher() {\n  yield takeLatest(GET_EMPLOYEES_LIST, getEmployeeList);\n  yield takeLatest(GET_SINGLE_EMPLOYEE, getEmployeeDetails);\n  yield takeLatest(ADD_EMPLOYEE, addEmployee);\n  yield takeLatest(ADD_EMPLOYEES_LIST, addEmployeeList);\n  yield takeLatest(EDIT_EMPLOYEE, editEmployee);\n}","map":{"version":3,"sources":["/home/amol/Desktop/HRA/src/sagas/employee.sagas.js"],"names":["put","takeLatest","GET_EMPLOYEES_LIST","GET_SINGLE_EMPLOYEE","ADD_EMPLOYEE","ADD_EMPLOYEES_LIST","GET_EMPLOYEES_LIST_SUCCESS","GET_EMPLOYEES_LIST_FAIL","GET_SINGLE_EMPLOYEE_SUCCESS","GET_SINGLE_EMPLOYEE_FAIL","ADD_EMPLOYEE_SUCCESS","ADD_EMPLOYEES_LIST_SUCCESS","ADD_EMPLOYEES_LIST_FAIL","ADD_EMPLOYEE_FAIL","SET_LOADING","EDIT_EMPLOYEE","EDIT_EMPLOYEE_SUCCESS","EDIT_EMPLOYEE_FAIL","Axios","EmpID","localStorage","getItem","console","log","object","getEmployeeList","type","employeeList","fetch","then","response","json","payload","e","message","getEmployeeDetails","employeeDetails","get","res","data","addEmployee","employee","post","catch","err","addEmployeeList","editEmployee","employeeActionWatcher"],"mappings":"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","sourcesContent":["import { put, takeLatest } from \"redux-saga/effects\";\nimport {\n  GET_EMPLOYEES_LIST,\n  GET_SINGLE_EMPLOYEE,\n  ADD_EMPLOYEE,\n  ADD_EMPLOYEES_LIST,\n  GET_EMPLOYEES_LIST_SUCCESS,\n  GET_EMPLOYEES_LIST_FAIL,\n  GET_SINGLE_EMPLOYEE_SUCCESS,\n  GET_SINGLE_EMPLOYEE_FAIL,\n  ADD_EMPLOYEE_SUCCESS,\n  ADD_EMPLOYEES_LIST_SUCCESS,\n  ADD_EMPLOYEES_LIST_FAIL,\n  ADD_EMPLOYEE_FAIL,\n  SET_LOADING,\n  EDIT_EMPLOYEE,\n  EDIT_EMPLOYEE_SUCCESS,\n  EDIT_EMPLOYEE_FAIL,\n} from \"../actions/employee/employeeTypes\";\nimport Axios from \"axios\";\n\nconst EmpID = (localStorage.getItem('EmpID'));\nconsole.log(object)\nfunction* getEmployeeList() {\n  yield put({ type: SET_LOADING });\n  try {\n    const employeeList = yield fetch(`https://`).then((response) => response.json());\n\n    yield put({ type: GET_EMPLOYEES_LIST_SUCCESS, payload: employeeList });\n  } catch (e) {\n    yield put({ type: GET_EMPLOYEES_LIST_FAIL, payload: e.message });\n  }\n  yield put({ type: SET_LOADING });\n}\n\nfunction* getEmployeeDetails({ payload }) {\n  try {\n    const employeeDetails = yield Axios.get(`/employees/${payload}`).then(\n      (res) => res.data\n    );\n    console.log(employeeDetails);\n    if (employeeDetails) {\n      yield put({ type: GET_SINGLE_EMPLOYEE_SUCCESS, payload: employeeDetails });\n    } else {\n      yield put({ type: GET_SINGLE_EMPLOYEE_FAIL, payload: employeeDetails });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* addEmployee({ payload }) {\n  yield put({ type: SET_LOADING });\n\n  try {\n    const employee = yield Axios.post(\"/employees/\", payload)\n      .then((res) => res.data)\n      .catch((err) => err);\n   \n    yield put({ type: ADD_EMPLOYEE_SUCCESS, payload: employee });\n  } catch (e) {\n    yield put({ type: ADD_EMPLOYEE_FAIL, payload: e.message });\n  }\n  yield put({ type: SET_LOADING });\n}\n\nfunction* addEmployeeList() {\n  yield put({ type: SET_LOADING });\n  try {\n    const employeeList = yield fetch(`https://`).then((response) => response.json());\n\n    yield put({ type: ADD_EMPLOYEES_LIST_SUCCESS, payload: employeeList });\n  } catch (e) {\n    yield put({ type: ADD_EMPLOYEES_LIST_FAIL, payload: e.message });\n  }\n  yield put({ type: SET_LOADING });\n}\nfunction* editEmployee({ payload }) {\n  yield put({ type: SET_LOADING });\n  try {\n    const employee = yield Axios.put(`/employees/${2}`, payload)\n      .then((res) => res.data)\n      .catch((err) => err);\n    console.log(\">>>>>>>EDIT>>>>>\",employee);\n    yield put({ type: EDIT_EMPLOYEE_SUCCESS, payload: employee });\n  } catch (e) {\n    yield put({ type: EDIT_EMPLOYEE_FAIL, payload: e.message });\n  }\n  yield put({ type: SET_LOADING });\n}\n\nexport function* employeeActionWatcher() {\n  yield takeLatest(GET_EMPLOYEES_LIST, getEmployeeList);\n  yield takeLatest(GET_SINGLE_EMPLOYEE, getEmployeeDetails);\n  yield takeLatest(ADD_EMPLOYEE, addEmployee);\n  yield takeLatest(ADD_EMPLOYEES_LIST, addEmployeeList);\n  yield takeLatest(EDIT_EMPLOYEE, editEmployee);\n}\n"]},"metadata":{},"sourceType":"module"}