{"ast":null,"code":"var _jsxFileName = \"/home/amol/Desktop/HRA/src/components/pages/bulkupload/BulkUpload.js\";\n// import React from \"react\";\n// import { Form, Upload, Card, Button } from \"antd\";\n// import { InboxOutlined } from \"@ant-design/icons\";\n// const BulkUpload = (props) => {\n//   const normFile = (e) => {\n//     console.log(\"Upload event:\", e);\n//     if (Array.isArray(e)) {\n//       return e;\n//     }\n//     return e && e.fileList;\n//   };\n//   return (\n//     <div>\n//       <Card title=\"Upload Employee List\" bordered={true} className=\"my-3\">\n//         <Form layout=\"vertical\">\n//           <Form.Item label=\"Select file to upload\">\n//             <Form.Item\n//               name=\"dragger\"\n//               valuePropName=\"fileList\"\n//               getValueFromEvent={normFile}\n//             >\n//               <Upload.Dragger name=\"files\" action=\"/upload.do\">\n//                 <p className=\"ant-upload-drag-icon\">\n//                   <InboxOutlined />\n//                 </p>\n//                 <p className=\"ant-upload-text\">\n//                   Click or drag file to this area to upload\n//                 </p>\n//                 <p className=\"ant-upload-hint\">\n//                   Support for a single or bulk upload.\n//                 </p>\n//               </Upload.Dragger>\n//             </Form.Item>\n//           </Form.Item>\n//           <Form.Item>\n//             <Button type=\"primary\" htmlType=\"submit\" block>\n//               Upload\n//             </Button>\n//           </Form.Item>\n//         </Form>\n//       </Card>\n//     </div>\n//   );\n// };\n// export default BulkUpload;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Form, Upload, Card, Button, Space } from \"antd\";\nimport Icon from \"@ant-design/icons\";\nimport sample1 from \"../../../constant/sample1.xlsx\";\nimport sample2 from \"../../../constant/sample2.csv\";\nimport { uploadEmployeeList } from \"../../../actions/employee/employeeActions\";\n\nconst BulkUpload = props => {\n  const avatarUpload = file => {\n    console.log(file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      },\n      body: {\n        file: file\n      }\n    };\n    axios.post(`/employees/bulkupload/${file.name}`, config).then(res => console.log(res)).catch(err => console.log(err));\n  };\n\n  const normFile = e => {\n    console.log(\"Upload event:\", e);\n    props.dispatch(uploadEmployeeList(e.file.name));\n\n    if (Array.isArray(e)) {\n      return e;\n    }\n\n    return e && e.fileList;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Upload Employee List\",\n    bordered: true,\n    className: \"my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Select file to upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    name: \"avatar\",\n    action: avatarUpload,\n    listType: \"picture-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-drag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    type: \"inbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Clique ou arraste um arquivo.\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: sample1,\n    download: \"sample_xlsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Download sample xlsx\"), \"/\", /*#__PURE__*/React.createElement(\"a\", {\n    href: sample2,\n    download: \"sample_csv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Download sample csv\"))))));\n};\n\nBulkUpload.propTypes = {\n  dispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  employee: state.employee\n});\n\nexport default connect(mapStateToProps)(BulkUpload);","map":{"version":3,"sources":["/home/amol/Desktop/HRA/src/components/pages/bulkupload/BulkUpload.js"],"names":["React","PropTypes","axios","connect","Form","Upload","Card","Button","Space","Icon","sample1","sample2","uploadEmployeeList","BulkUpload","props","avatarUpload","file","console","log","config","headers","body","post","name","then","res","catch","err","normFile","e","dispatch","Array","isArray","fileList","propTypes","func","isRequired","mapStateToProps","state","employee"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import { Form, Upload, Card, Button } from \"antd\";\n// import { InboxOutlined } from \"@ant-design/icons\";\n\n// const BulkUpload = (props) => {\n//   const normFile = (e) => {\n//     console.log(\"Upload event:\", e);\n//     if (Array.isArray(e)) {\n//       return e;\n//     }\n//     return e && e.fileList;\n//   };\n//   return (\n//     <div>\n//       <Card title=\"Upload Employee List\" bordered={true} className=\"my-3\">\n//         <Form layout=\"vertical\">\n//           <Form.Item label=\"Select file to upload\">\n//             <Form.Item\n//               name=\"dragger\"\n//               valuePropName=\"fileList\"\n//               getValueFromEvent={normFile}\n//             >\n//               <Upload.Dragger name=\"files\" action=\"/upload.do\">\n//                 <p className=\"ant-upload-drag-icon\">\n//                   <InboxOutlined />\n//                 </p>\n//                 <p className=\"ant-upload-text\">\n//                   Click or drag file to this area to upload\n//                 </p>\n//                 <p className=\"ant-upload-hint\">\n//                   Support for a single or bulk upload.\n//                 </p>\n//               </Upload.Dragger>\n//             </Form.Item>\n//           </Form.Item>\n//           <Form.Item>\n//             <Button type=\"primary\" htmlType=\"submit\" block>\n//               Upload\n//             </Button>\n//           </Form.Item>\n//         </Form>\n//       </Card>\n//     </div>\n//   );\n// };\n\n// export default BulkUpload;\n\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Form, Upload, Card, Button, Space } from \"antd\";\nimport Icon from \"@ant-design/icons\";\nimport sample1 from \"../../../constant/sample1.xlsx\";\nimport sample2 from \"../../../constant/sample2.csv\";\nimport { uploadEmployeeList } from \"../../../actions/employee/employeeActions\";\n\nconst BulkUpload = (props) => {\n  const avatarUpload = (file) => {\n    console.log(file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n      body: {\n        file: file,\n      },\n    };\n    axios\n      .post(`/employees/bulkupload/${file.name}`, config)\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n  };\n  const normFile = (e) => {\n    console.log(\"Upload event:\", e);\n    props.dispatch(uploadEmployeeList(e.file.name));\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n  return (\n    <div>\n      <Card title=\"Upload Employee List\" bordered={true} className=\"my-3\">\n        <Form layout=\"vertical\">\n          <Form.Item label=\"Select file to upload\">\n            <Upload name=\"avatar\" action={avatarUpload} listType=\"picture-card\">\n              <p className=\"ant-upload-drag-icon\">\n                <Icon type=\"inbox\" />\n              </p>\n              <p className=\"ant-upload-text\">Clique ou arraste um arquivo.</p>\n            </Upload>\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" block>\n              Upload\n            </Button>\n            <Space>\n              <a href={sample1} download=\"sample_xlsx\">\n                Download sample xlsx\n              </a>\n              /\n              <a href={sample2} download=\"sample_csv\">\n                Download sample csv\n              </a>\n            </Space>\n          </Form.Item>\n        </Form>\n      </Card>\n    </div>\n  );\n};\n\nBulkUpload.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n});\n\nexport default connect(mapStateToProps)(BulkUpload);\n"]},"metadata":{},"sourceType":"module"}