{"ast":null,"code":"import { put, takeLatest } from \"redux-saga/effects\";\nimport { SET_LOADING } from \"../actions/employee/employeeTypes\";\nimport { LOGIN, LOGOUT, LOGIN_SUCCESS, LOGOUT_SUCCESS, CLEAR_MESSAGES, CURRENT_USER, SUCCESS_MESSAGE, ERROR_MESSAGE } from \"../actions/auth/authTypes\";\nimport Axios from \"axios\";\n\nfunction* userLogin({\n  payload\n}) {\n  yield put({\n    type: CLEAR_MESSAGES\n  });\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const user = yield Axios.post(\"/api/token/\", payload).then(res => {\n      return res.data;\n    }).catch(err => {\n      console.log(err.response.data);\n    });\n    let msg;\n\n    if (user) {\n      localStorage.setItem(\"accessToken\", user.access);\n      localStorage.setItem(\"refreshToken\", user.refresh);\n      const userData = {\n        user: payload.username\n      };\n      yield put({\n        type: LOGIN_SUCCESS,\n        payload: userData\n      });\n      localStorage.setItem(\"user\", JSON.stringify(userData));\n      msg = {\n        id: 1,\n        text: \"Login successful\"\n      };\n      yield put({\n        type: SUCCESS_MESSAGE,\n        payload: msg\n      });\n    } else {\n      msg = {\n        id: 1,\n        text: \"No active account found with the given credentials\"\n      };\n      yield put({\n        type: ERROR_MESSAGE,\n        payload: msg\n      });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\n\nfunction* userLogout() {\n  yield put({\n    type: CLEAR_MESSAGES\n  }); // yield put({ type: SET_LOADING });\n  // try {\n  //    const user = yield fetch(`https://`).then((response) => response.json());\n  //    yield put({ type: LOGOUT_SUCCESS, payload: user });\n  // } catch (e) {\n  //    yield put({ type: LOGOUT_FAIL, payload: e.message });\n  // }\n  // yield put({ type: SET_LOADING });\n\n  const successMsg = {\n    id: 1,\n    text: \"Logout successful\"\n  };\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"accessToken\");\n  localStorage.removeItem(\"refreshToken\");\n  yield put({\n    type: LOGOUT_SUCCESS\n  });\n  yield put({\n    type: SUCCESS_MESSAGE,\n    payload: successMsg\n  });\n}\n\nexport function* currentUser({\n  payload\n}) {\n  yield put({\n    type: LOGIN_SUCCESS,\n    payload: payload\n  });\n}\nexport function* authActionWatcher() {\n  yield takeLatest(LOGIN, userLogin);\n  yield takeLatest(LOGOUT, userLogout);\n  yield takeLatest(CURRENT_USER, currentUser);\n}","map":{"version":3,"sources":["/home/amol/Desktop/HRA/src/sagas/auth.sagas.js"],"names":["put","takeLatest","SET_LOADING","LOGIN","LOGOUT","LOGIN_SUCCESS","LOGOUT_SUCCESS","CLEAR_MESSAGES","CURRENT_USER","SUCCESS_MESSAGE","ERROR_MESSAGE","Axios","userLogin","payload","type","user","post","then","res","data","catch","err","console","log","response","msg","localStorage","setItem","access","refresh","userData","username","JSON","stringify","id","text","e","userLogout","successMsg","removeItem","currentUser","authActionWatcher"],"mappings":"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","sourcesContent":["import { put, takeLatest } from \"redux-saga/effects\";\nimport { SET_LOADING } from \"../actions/employee/employeeTypes\";\nimport {\n  LOGIN,\n  LOGOUT,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  CLEAR_MESSAGES,\n  CURRENT_USER,\n  SUCCESS_MESSAGE,\n  ERROR_MESSAGE,\n} from \"../actions/auth/authTypes\";\nimport Axios from \"axios\";\n\nfunction* userLogin({ payload }) {\n  yield put({ type: CLEAR_MESSAGES });\n  yield put({ type: SET_LOADING });\n\n  try {\n    const user = yield Axios.post(\"/api/token/\", payload)\n      .then((res) => {\n        return res.data;\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n      });\n    let msg;\n    if (user) {\n      localStorage.setItem(\"accessToken\", user.access);\n      localStorage.setItem(\"refreshToken\", user.refresh);\n      const userData = {\n        user: payload.username,\n      };\n      yield put({ type: LOGIN_SUCCESS, payload: userData });\n      localStorage.setItem(\"user\", JSON.stringify(userData));\n      msg = {\n        id: 1,\n        text: \"Login successful\",\n      };\n      yield put({ type: SUCCESS_MESSAGE, payload: msg });\n    } else {\n      msg = {\n        id: 1,\n        text: \"No active account found with the given credentials\",\n      };\n      yield put({ type: ERROR_MESSAGE, payload: msg });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  yield put({ type: SET_LOADING });\n}\n function* userLogout() {\n  yield put({ type: CLEAR_MESSAGES });\n  // yield put({ type: SET_LOADING });\n  // try {\n  //    const user = yield fetch(`https://`).then((response) => response.json());\n\n  //    yield put({ type: LOGOUT_SUCCESS, payload: user });\n  // } catch (e) {\n  //    yield put({ type: LOGOUT_FAIL, payload: e.message });\n  // }\n  // yield put({ type: SET_LOADING });\n  const successMsg = {\n    id: 1,\n    text: \"Logout successful\",\n  };\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"accessToken\");\n  localStorage.removeItem(\"refreshToken\");\n  yield put({ type: LOGOUT_SUCCESS });\n  yield put({ type: SUCCESS_MESSAGE, payload: successMsg });\n}\nexport function* currentUser({ payload }) {\n  yield put({ type: LOGIN_SUCCESS, payload: payload });\n}\n\nexport function* authActionWatcher() {\n  yield takeLatest(LOGIN, userLogin);\n  yield takeLatest(LOGOUT, userLogout);\n  yield takeLatest(CURRENT_USER, currentUser);\n}\n"]},"metadata":{},"sourceType":"module"}