{"ast":null,"code":"var _jsxFileName = \"/home/amol/Desktop/HRA/src/components/pages/dashboard/dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Input, Button, Select, Modal, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Axios from 'axios';\nimport PropTypes from 'prop-types';\nimport BulkUpload from \"../bulkupload/BulkUpload\";\nimport AddEmployee from \"../addemployee/AddEmployee\";\nimport EditEmployee from \"../editemployee/EditEmployee\";\nimport ShowEmployee from \"../showemployee/ShowEmployee\";\nimport { CloudUploadOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport { getEmployeeList, getLocations } from \"../../../actions/employee/employeeActions\";\nconst {\n  Option\n} = Select;\nconst {\n  Search\n} = Input;\n\nconst Dashboard = props => {\n  const paginationConfig = {\n    defaultPageSize: 5,\n    showSizeChanger: true,\n    pageSizeOptions: [\"5\", \"10\", \"20\", \"50\", \"100\"]\n  };\n  const [data, setData] = useState([]);\n  const [pagination, setPagination] = useState(paginationConfig);\n  const [loading, setLoading] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [selectModal, setSelectModal] = useState(\"\");\n  const [searchParams, setSearchParams] = useState({});\n  const [showEmp, setShowEmp] = useState(\"\");\n  const [projects, setProjects] = useState(null);\n  const [locations, setLocations] = useState([]);\n  useEffect(() => {\n    fetch();\n    props.getLocations(); //eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    if (props.employee.locations.length > 0) {\n      let locationList = props.employee.locations.map(loc => {\n        return {\n          text: loc.ADDRESS,\n          value: loc.ID\n        };\n      });\n      setLocations(locationList);\n    }\n  }, [props.employee.locations]);\n  useEffect(() => {\n    if (props.messages.success.length > 0 && showModal) {\n      handleModal(null, null);\n      setSearchParams({});\n    }\n  }, [props.messages.success]);\n  useEffect(() => {\n    Axios.get(\"/projects\").then(res => {\n      setProjects(res.data);\n    });\n  }, []);\n\n  const handleModal = (name, id) => {\n    setShowEmp(id);\n    setSelectModal(name);\n    setShowModal(!showModal);\n  };\n\n  const handleTableChange = (pagination, filters, sorter) => {\n    const pager = { ...pagination\n    };\n    pager.current = pagination.current;\n    setPagination(pager);\n\n    if (sorter.field === \"NAME\") {\n      sorter.field = \"FIRSTNAME\";\n    }\n\n    if (sorter.field === \"EMPID\") {\n      sorter.field = \"ID\";\n    }\n\n    fetch({ ...filters,\n      results: pagination.pageSize,\n      page: pagination.current,\n      ordering: sorter.order && sorter.order === \"descend\" ? `-${sorter.field}` : sorter.field,\n      CURRENTLOCATION: filters.CURRENTLOCATION && filters.CURRENTLOCATION.join(),\n      UNIT: filters.UNIT && filters.UNIT.join(),\n      STATUS: filters.STATUS && filters.STATUS.join()\n    });\n  };\n\n  const fetch = (params = {}) => {\n    if (Object.keys(params).length) {\n      setSearchParams({ ...params,\n        offset: params.results * (params.page - 1),\n        limit: params.results,\n        page: undefined,\n        results: undefined\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (searchParams.offset === 0) {\n      setPagination({ ...pagination,\n        current: 1\n      });\n    }\n\n    const payload = {\n      params: {\n        limit: 5,\n        ...searchParams,\n        search: searchInput\n      }\n    };\n    props.getEmployeeList(payload); //eslint-disable-next-line\n  }, [searchParams]);\n  useEffect(() => {\n    if (Object.keys(props.employee.employeeList).length > 0) {\n      const newData = props.employee.employeeList.results.map(emp => {\n        return { ...emp,\n          NAME: {\n            FIRSTNAME: emp.FIRSTNAME,\n            LASTNAME: emp.LASTNAME\n          }\n        };\n      });\n      const paginationData = { ...pagination\n      };\n      paginationData.total = props.employee.employeeList.count;\n      setData(newData);\n      setPagination(paginationData);\n      setLoading(false);\n    }\n  }, [props.employee.employeeList]);\n  const columns = [{\n    title: \"Emp Id\",\n    dataIndex: \"EMPID\",\n    sorter: true\n  }, {\n    title: \"Name\",\n    dataIndex: \"NAME\",\n    sorter: true,\n    render: NAME => NAME.FIRSTNAME + \" \" + NAME.LASTNAME\n  }, {\n    title: \"Email\",\n    dataIndex: \"EMAIL\"\n  }, {\n    title: \"Address\",\n    dataIndex: \"CURRENTLOCATION\",\n    render: CURRENTLOCATION => CURRENTLOCATION.ADDRESS,\n    filters: [...locations]\n  }, {\n    title: \"Unit\",\n    dataIndex: \"UNIT\",\n    filters: [{\n      text: \"IDM\",\n      value: \"idm\"\n    }, {\n      text: \"CIS\",\n      value: \"cis\"\n    }]\n  }, {\n    title: \"Status\",\n    dataIndex: \"STATUS\"\n  }, {\n    title: \"Action\",\n    dataIndex: \"EMPID\",\n    render: EMPID => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      size: \"small\",\n      className: \"m-1 show-emp\",\n      onClick: () => handleModal(\"show\", EMPID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, \"Show\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      size: \"small\",\n      className: \"m-1 edit-emp\",\n      onClick: () => handleModal(\"edit\", EMPID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, \"Edit\"))\n  }];\n  const selectBefore = /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"select status\",\n    style: {\n      width: 140\n    },\n    className: \"select-before\",\n    onChange: value => setSearchParams({ ...searchParams,\n      STATUS: value,\n      offset: 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, \"Select status\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"onboarding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, \"Onboarding\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"offboarding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, \"Offboarding\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"inactive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, \"Inactive\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, \"Employees\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-3 d-flex flex-column justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 w-sm-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    addonBefore: selectBefore,\n    placeholder: \"input search text\",\n    enterButton: \"Search\",\n    size: \"large\",\n    onChange: e => setSearchInput(e.target.value),\n    onSearch: value => setSearchParams({ ...searchParams,\n      search: searchInput,\n      offset: 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button.Group, {\n    className: \"my-sm-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      margin: \"0 2px\"\n    },\n    size: \"large\",\n    onClick: () => handleModal(\"add\"),\n    id: \"add-emp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }), \"Add Employee\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      margin: \"0 2px\"\n    },\n    size: \"large\",\n    onClick: () => handleModal(\"upload\"),\n    id: \"upload-emp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloudUploadOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }), \"Add Employee List\"))), /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    columns: columns,\n    rowKey: ID => ID,\n    dataSource: data,\n    pagination: pagination,\n    loading: loading,\n    onChange: handleTableChange,\n    className: \"overflow-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: showModal,\n    onCancel: handleModal,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, selectModal === \"upload\" && /*#__PURE__*/React.createElement(BulkUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 38\n    }\n  }), selectModal === \"add\" && locations !== null && projects !== null && /*#__PURE__*/React.createElement(AddEmployee, {\n    location: locations,\n    projects: projects,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }), selectModal === \"edit\" && locations !== null && projects !== null && showEmp !== null && /*#__PURE__*/React.createElement(EditEmployee, {\n    empid: showEmp,\n    location: locations,\n    projects: projects,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }), selectModal === \"show\" && /*#__PURE__*/React.createElement(ShowEmployee, {\n    empid: showEmp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 36\n    }\n  })));\n};\n\nDashboard.propTypes = {\n  employee: PropTypes.object,\n  getEmployeeList: PropTypes.func.isRequired,\n  getLocations: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  employee: state.employee,\n  messages: state.messages\n});\n\nexport default connect(mapStateToProps, {\n  getEmployeeList,\n  getLocations\n})(Dashboard);","map":{"version":3,"sources":["/home/amol/Desktop/HRA/src/components/pages/dashboard/dashboard.js"],"names":["React","useState","useEffect","Table","Input","Button","Select","Modal","message","connect","Axios","PropTypes","BulkUpload","AddEmployee","EditEmployee","ShowEmployee","CloudUploadOutlined","PlusCircleOutlined","getEmployeeList","getLocations","Option","Search","Dashboard","props","paginationConfig","defaultPageSize","showSizeChanger","pageSizeOptions","data","setData","pagination","setPagination","loading","setLoading","searchInput","setSearchInput","showModal","setShowModal","selectModal","setSelectModal","searchParams","setSearchParams","showEmp","setShowEmp","projects","setProjects","locations","setLocations","fetch","employee","length","locationList","map","loc","text","ADDRESS","value","ID","messages","success","handleModal","get","then","res","name","id","handleTableChange","filters","sorter","pager","current","field","results","pageSize","page","ordering","order","CURRENTLOCATION","join","UNIT","STATUS","params","Object","keys","offset","limit","undefined","payload","search","employeeList","newData","emp","NAME","FIRSTNAME","LASTNAME","paginationData","total","count","columns","title","dataIndex","render","EMPID","selectBefore","width","e","target","margin","propTypes","object","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Table, Input, Button, Select, Modal, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Axios from 'axios';\nimport PropTypes from 'prop-types';\nimport BulkUpload from \"../bulkupload/BulkUpload\";\nimport AddEmployee from \"../addemployee/AddEmployee\";\nimport EditEmployee from \"../editemployee/EditEmployee\";\nimport ShowEmployee from \"../showemployee/ShowEmployee\";\nimport { CloudUploadOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\n\nimport { getEmployeeList, getLocations } from \"../../../actions/employee/employeeActions\";\nconst { Option } = Select;\nconst { Search } = Input;\n\nconst Dashboard = (props) => {\n  const paginationConfig = {\n    defaultPageSize: 5,\n    showSizeChanger: true,\n    pageSizeOptions: [\"5\", \"10\", \"20\", \"50\", \"100\"],\n  };\n  const [data, setData] = useState([]);\n  const [pagination, setPagination] = useState(paginationConfig);\n  const [loading, setLoading] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [selectModal, setSelectModal] = useState(\"\");\n  const [searchParams, setSearchParams] = useState({});\n  const [showEmp, setShowEmp] = useState(\"\");\n  const [projects, setProjects] = useState(null); \n  const [locations, setLocations] = useState([])\n\n  useEffect(() => {\n    fetch();\n    props.getLocations();\n    //eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n     if (props.employee.locations.length > 0) {\n        let locationList = props.employee.locations.map(loc => {\n           return {\n              text: loc.ADDRESS,\n              value: loc.ID\n           }\n        })\n        setLocations(locationList);\n     }\n  }, [props.employee.locations])\n\n  useEffect(() => {\n     if (props.messages.success.length > 0 && showModal) {\n      handleModal(null, null);\n      setSearchParams({});\n     }\n  }, [ props.messages.success]);\n\n  useEffect(() => {\n    Axios.get(\"/projects\").then((res) => {\n      setProjects(res.data);\n    });\n  }, []);\n\n  const handleModal = (name, id) => {\n    setShowEmp(id);\n    setSelectModal(name);\n    setShowModal(!showModal);\n  };\n\n  const handleTableChange = (pagination, filters, sorter) => {\n    const pager = { ...pagination };\n    pager.current = pagination.current;\n    setPagination(pager);\n    if (sorter.field === \"NAME\") {\n      sorter.field = \"FIRSTNAME\";\n    }\n    if (sorter.field === \"EMPID\") {\n      sorter.field = \"ID\";\n    }\n    fetch({\n      ...filters,\n      results: pagination.pageSize,\n      page: pagination.current,\n      ordering:\n        sorter.order && sorter.order === \"descend\"\n          ? `-${sorter.field}`\n          : sorter.field,\n      CURRENTLOCATION: filters.CURRENTLOCATION && filters.CURRENTLOCATION.join(),\n      UNIT: filters.UNIT && filters.UNIT.join(),\n      STATUS: filters.STATUS && filters.STATUS.join(),\n    });\n  };\n\n  const fetch = (params = {}) => {\n    if (Object.keys(params).length) {\n      setSearchParams({\n        ...params,\n        offset: params.results * (params.page - 1),\n        limit: params.results,\n        page: undefined,\n        results: undefined\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n   if (searchParams.offset === 0) {\n      setPagination({...pagination, current:1});\n   }\n    const payload = {\n      params: {\n        limit: 5,\n        ...searchParams,\n        search: searchInput,\n      },\n    };\n    props.getEmployeeList(payload);\n    //eslint-disable-next-line\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (Object.keys(props.employee.employeeList).length > 0) {\n      const newData = props.employee.employeeList.results.map((emp) => {\n        return {\n          ...emp,\n          NAME: {\n            FIRSTNAME: emp.FIRSTNAME,\n            LASTNAME: emp.LASTNAME,\n          },\n        };\n      });\n      const paginationData = { ...pagination };\n      paginationData.total = props.employee.employeeList.count;\n      setData(newData);\n      setPagination(paginationData);\n      setLoading(false);\n    }\n    \n  }, [props.employee.employeeList]);\n\n  const columns = [\n    {\n      title: \"Emp Id\",\n      dataIndex: \"EMPID\",\n      sorter: true,\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"NAME\",\n      sorter: true,\n      render: (NAME) => NAME.FIRSTNAME + \" \" + NAME.LASTNAME,\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"EMAIL\",\n    },\n    {\n      title: \"Address\",\n      dataIndex: \"CURRENTLOCATION\",\n      render: (CURRENTLOCATION) => CURRENTLOCATION.ADDRESS,\n      filters: [...locations],\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"UNIT\",\n      filters: [\n        { text: \"IDM\", value: \"idm\" },\n        { text: \"CIS\", value: \"cis\" },\n      ],\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"STATUS\"\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"EMPID\",\n      render: (EMPID) => (\n        <div>\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            className=\"m-1 show-emp\"\n            onClick={() => handleModal(\"show\", EMPID)}\n          >\n            Show\n          </Button>\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            className=\"m-1 edit-emp\"\n            onClick={() => handleModal(\"edit\", EMPID)}\n          >\n            Edit\n          </Button>\n        </div>\n      ),\n    },\n  ];\n  const selectBefore = (\n    <Select\n      defaultValue=\"select status\"\n      style={{ width: 140 }}\n      className=\"select-before\"\n      onChange={(value) => setSearchParams({ ...searchParams, STATUS: value, offset: 0 })}\n    >\n      <Option value=\"\">Select status</Option>\n      <Option value=\"onboarding\">Onboarding</Option>\n      <Option value=\"offboarding\">Offboarding</Option>\n      <Option value=\"inactive\">Inactive</Option>\n    </Select>\n  );\n\n  return (\n    <div className=\"my-3\">\n      <h3>Employees</h3>\n      <div className=\"my-3 d-flex flex-column justify-content-between\">\n        <div className=\"w-50 w-sm-50\">\n          <Search\n            addonBefore={selectBefore}\n            placeholder=\"input search text\"\n            enterButton=\"Search\"\n            size=\"large\"\n            onChange={(e) => setSearchInput(e.target.value)}\n            onSearch={(value) =>\n              setSearchParams({ ...searchParams, search: searchInput, offset: 0 })\n            }\n          />\n        </div>\n        <Button.Group className=\"my-sm-3\">\n          <Button\n            type=\"primary\"\n            style={{ margin: \"0 2px\" }}\n            size=\"large\"\n            onClick={() => handleModal(\"add\")}\n            id=\"add-emp\"\n          >\n            <PlusCircleOutlined />\n            Add Employee\n          </Button>\n          <Button\n            type=\"primary\"\n            style={{ margin: \"0 2px\" }}\n            size=\"large\"\n            onClick={() => handleModal(\"upload\")}\n            id=\"upload-emp\"\n          >\n            <CloudUploadOutlined />\n            Add Employee List\n          </Button>\n        </Button.Group>\n      </div>\n      <Table\n        bordered\n        columns={columns}\n        rowKey={(ID) => ID}\n        dataSource={data}\n        pagination={pagination}\n        loading={loading}\n        onChange={handleTableChange}\n        className=\"overflow-auto\"\n      />\n      <Modal visible={showModal} onCancel={handleModal} footer={null}>\n        {selectModal === \"upload\" && <BulkUpload />}\n        {selectModal === \"add\" && locations !== null && projects !== null && (\n          <AddEmployee location={locations} projects={projects} />\n        )}\n        {selectModal === \"edit\" &&\n          locations !== null &&\n          projects !== null &&\n          showEmp !== null && (\n            <EditEmployee empid={showEmp} location={locations} projects={projects} />\n          )}\n        {selectModal === \"show\" && <ShowEmployee empid={showEmp} />}\n      </Modal>\n    </div>\n  );\n};\nDashboard.propTypes = {\n   employee: PropTypes.object,\n   getEmployeeList: PropTypes.func.isRequired,\n   getLocations: PropTypes.func.isRequired\n};\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  messages: state.messages,\n});\n\nexport default connect(mapStateToProps, { getEmployeeList, getLocations })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}