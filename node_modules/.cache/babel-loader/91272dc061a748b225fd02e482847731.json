{"ast":null,"code":"// import React, { useEffect } from \"react\";\n// import { Route, Switch, Redirect } from \"react-router-dom\";\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\n// import Container from \"@material-ui/core/Container\";\n// import \"antd/dist/antd.css\";\n// import \"./App.css\";\n// import { Layout, message } from \"antd\";\n// import Home from \"./components/modules/home/home\";\n// import Dashboard from \"./components/modules/dashboard/dashboard\";\n// import Patients from \"./components/modules/patients/patients\";\n// import Resources from \"./components/modules/resources/resources\";\n// import Analytics from \"./components/modules/analytics/analytics\";\n// import Login from \"./components/modules/login/Login\";\n// import PrivateRoute from \"./components/utils/PrivateRoute\";\n// import Navbar from \"./components/modules/navbar/navbar\";\n// const { Content } = Layout;\n// const App = (props) => {\n//   useEffect(() => {\n//     if (props.messages.success.length) {\n//       props.messages.success.map((msg) => message.success(msg.text));\n//     }\n//     if (props.messages.error.length) {\n//       props.messages.error.map((msg) => message.error(msg.text));\n//     }\n//   }, [props.messages]);\n//   return (\n//     <React.Fragment>\n//       {/* <CssBaseline /> */}\n//       <Container fixed>\n//         {props.auth.isAuthenticated ? <Navbar /> : \"\"}\n//         <Route\n//           exact\n//           path=\"/\"\n//           render={() =>\n//             props.auth.isAuthenticated ? <Redirect to=\"/home\" /> : <Login />\n//           }\n//         />\n//         {/* <Layout className=\"container\">\n//           <Content\n//             className=\"site-layout-background\"\n//             style={\n//               props.auth.isAuthenticated\n//                 ? {\n//                     padding: 24,\n//                     margin: 0,\n//                     minHeight: \"90vh\",\n//                   }\n//                 : {}\n//             }\n//           > */}\n//         <Switch>\n//           <PrivateRoute exact path=\"/home\" component={Home} />\n//           <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n//           <PrivateRoute exact path=\"/patients\" component={Patients} />\n//           <PrivateRoute exact path=\"/resources\" component={Resources} />\n//           <PrivateRoute exact path=\"/analytics\" component={Analytics} />\n//         </Switch>\n//         {/* </Content>\n//         </Layout>{\" \"} */}\n//       </Container>\n//     </React.Fragment>\n//   );\n// };\n// App.propTypes = {\n//   auth: PropTypes.object.isRequired,\n//   messages: PropTypes.object.isRequired,\n// };\n// const mapStateToProps = (state) => ({\n//   auth: state.auth,\n//   messages: state.messages,\n// });\n// export default connect(mapStateToProps, {})(App);","map":{"version":3,"sources":["/home/amol/Amol Personal Projects/40-Redux-saga-with-loginPage-API-integration/src/App.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useEffect } from \"react\";\n// import { Route, Switch, Redirect } from \"react-router-dom\";\n\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\n// import Container from \"@material-ui/core/Container\";\n// import \"antd/dist/antd.css\";\n// import \"./App.css\";\n// import { Layout, message } from \"antd\";\n// import Home from \"./components/modules/home/home\";\n// import Dashboard from \"./components/modules/dashboard/dashboard\";\n// import Patients from \"./components/modules/patients/patients\";\n// import Resources from \"./components/modules/resources/resources\";\n// import Analytics from \"./components/modules/analytics/analytics\";\n// import Login from \"./components/modules/login/Login\";\n// import PrivateRoute from \"./components/utils/PrivateRoute\";\n// import Navbar from \"./components/modules/navbar/navbar\";\n// const { Content } = Layout;\n\n// const App = (props) => {\n//   useEffect(() => {\n//     if (props.messages.success.length) {\n//       props.messages.success.map((msg) => message.success(msg.text));\n//     }\n//     if (props.messages.error.length) {\n//       props.messages.error.map((msg) => message.error(msg.text));\n//     }\n//   }, [props.messages]);\n//   return (\n//     <React.Fragment>\n//       {/* <CssBaseline /> */}\n\n//       <Container fixed>\n//         {props.auth.isAuthenticated ? <Navbar /> : \"\"}\n//         <Route\n//           exact\n//           path=\"/\"\n//           render={() =>\n//             props.auth.isAuthenticated ? <Redirect to=\"/home\" /> : <Login />\n//           }\n//         />\n//         {/* <Layout className=\"container\">\n//           <Content\n//             className=\"site-layout-background\"\n//             style={\n//               props.auth.isAuthenticated\n//                 ? {\n//                     padding: 24,\n//                     margin: 0,\n//                     minHeight: \"90vh\",\n//                   }\n//                 : {}\n//             }\n//           > */}\n//         <Switch>\n//           <PrivateRoute exact path=\"/home\" component={Home} />\n//           <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n//           <PrivateRoute exact path=\"/patients\" component={Patients} />\n//           <PrivateRoute exact path=\"/resources\" component={Resources} />\n//           <PrivateRoute exact path=\"/analytics\" component={Analytics} />\n//         </Switch>\n//         {/* </Content>\n//         </Layout>{\" \"} */}\n//       </Container>\n//     </React.Fragment>\n//   );\n// };\n\n// App.propTypes = {\n//   auth: PropTypes.object.isRequired,\n//   messages: PropTypes.object.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({\n//   auth: state.auth,\n//   messages: state.messages,\n// });\n\n// export default connect(mapStateToProps, {})(App);\n"]},"metadata":{},"sourceType":"module"}