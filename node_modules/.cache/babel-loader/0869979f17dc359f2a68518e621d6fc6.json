{"ast":null,"code":"import Axios from \"axios\";\nexport const setAuthToken = token => {\n  if (token) {\n    // Apply to every request\n    Axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token; // axiosResponseInterceptor();\n  } else {\n    // Delete auth header\n    delete Axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport const axiosResponseInterceptor = () => {\n  Axios.interceptors.response.use(response => {\n    return response;\n  }, function (error) {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      const refreshToken = localStorage.refreshToken;\n      return Axios.post(\"/api/token/refresh/\", {\n        refresh: refreshToken\n      }).then(res => {\n        if (res.status === 200) {\n          localStorage.setItem(\"accessToken\", res.data.access);\n          Axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + res.data.access;\n          error.response.config.headers[\"Authorization\"] = \"Bearer \" + res.data.access;\n          return Axios(originalRequest);\n        }\n      });\n    }\n\n    return Promise.reject(error);\n  });\n};","map":{"version":3,"sources":["/home/amol/Desktop/HRA/src/components/utils/setToken.js"],"names":["Axios","setAuthToken","token","defaults","headers","common","axiosResponseInterceptor","interceptors","response","use","error","originalRequest","config","status","_retry","refreshToken","localStorage","post","refresh","then","res","setItem","data","access","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACrC,MAAIA,KAAJ,EAAW;AACT;AACAF,IAAAA,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,YAAYH,KAA7D,CAFS,CAGT;AACD,GAJD,MAIO;AACL;AACA,WAAOF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACD;AACF,CATM;AAWP,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC5CN,EAAAA,KAAK,CAACO,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACGD,QAAD,IAAc;AACZ,WAAOA,QAAP;AACD,GAHH,EAIE,UAAUE,KAAV,EAAiB;AACf,UAAMC,eAAe,GAAGD,KAAK,CAACE,MAA9B;;AAEA,QAAIF,KAAK,CAACF,QAAN,CAAeK,MAAf,KAA0B,GAA1B,IAAiC,CAACF,eAAe,CAACG,MAAtD,EAA8D;AAC5DH,MAAAA,eAAe,CAACG,MAAhB,GAAyB,IAAzB;AACA,YAAMC,YAAY,GAAGC,YAAY,CAACD,YAAlC;AACA,aAAOf,KAAK,CAACiB,IAAN,CAAW,qBAAX,EAAkC;AACvCC,QAAAA,OAAO,EAAEH;AAD8B,OAAlC,EAEJI,IAFI,CAEEC,GAAD,IAAS;AACf,YAAIA,GAAG,CAACP,MAAJ,KAAe,GAAnB,EAAwB;AACtBG,UAAAA,YAAY,CAACK,OAAb,CAAqB,aAArB,EAAoCD,GAAG,CAACE,IAAJ,CAASC,MAA7C;AACAvB,UAAAA,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IACE,YAAYe,GAAG,CAACE,IAAJ,CAASC,MADvB;AAEAb,UAAAA,KAAK,CAACF,QAAN,CAAeI,MAAf,CAAsBR,OAAtB,CAA8B,eAA9B,IACE,YAAYgB,GAAG,CAACE,IAAJ,CAASC,MADvB;AAEA,iBAAOvB,KAAK,CAACW,eAAD,CAAZ;AACD;AACF,OAXM,CAAP;AAYD;;AACD,WAAOa,OAAO,CAACC,MAAR,CAAef,KAAf,CAAP;AACD,GAxBH;AA0BD,CA3BM","sourcesContent":["import Axios from \"axios\";\n\nexport const setAuthToken = (token) => {\n  if (token) {\n    // Apply to every request\n    Axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n    // axiosResponseInterceptor();\n  } else {\n    // Delete auth header\n    delete Axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport const axiosResponseInterceptor = () => {\n  Axios.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    function (error) {\n      const originalRequest = error.config;\n\n      if (error.response.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        const refreshToken = localStorage.refreshToken;\n        return Axios.post(\"/api/token/refresh/\", {\n          refresh: refreshToken,\n        }).then((res) => {\n          if (res.status === 200) {\n            localStorage.setItem(\"accessToken\", res.data.access);\n            Axios.defaults.headers.common[\"Authorization\"] =\n              \"Bearer \" + res.data.access;\n            error.response.config.headers[\"Authorization\"] =\n              \"Bearer \" + res.data.access;\n            return Axios(originalRequest);\n          }\n        });\n      }\n      return Promise.reject(error);\n    }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}