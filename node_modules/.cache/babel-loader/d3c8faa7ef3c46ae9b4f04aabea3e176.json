{"ast":null,"code":"import { put, takeLatest } from \"redux-saga/effects\";\nimport { GET_EMPLOYEES_LIST, GET_EMPLOYEES_LIST_SUCCESS, GET_EMPLOYEES_LIST_FAIL, SET_LOADING } from \"../actions/employee/employeeTypes\";\nimport Axios from \"axios\";\nimport { SUCCESS_MESSAGE, ERROR_MESSAGE } from \"../actions/auth/authTypes\";\nexport function* getEmployeeList({\n  payload\n}) {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const employeeList = yield Axios.get(`/employees/`, payload).then(res => res.data);\n    yield put({\n      type: GET_EMPLOYEES_LIST_SUCCESS,\n      payload: employeeList\n    });\n  } catch (err) {\n    yield put({\n      type: GET_EMPLOYEES_LIST_FAIL,\n      payload: err.response.data\n    });\n    let msg = {\n      id: 1,\n      text: \"Failed to process request\"\n    };\n    yield put({\n      type: ERROR_MESSAGE,\n      payload: msg\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\nexport function* employeeActionWatcher() {\n  yield takeLatest(GET_EMPLOYEES_LIST, getEmployeeList);\n}","map":{"version":3,"sources":["/home/amol/Desktop/MACE/src/sagas/employee.sagas.js"],"names":["put","takeLatest","GET_EMPLOYEES_LIST","GET_EMPLOYEES_LIST_SUCCESS","GET_EMPLOYEES_LIST_FAIL","SET_LOADING","Axios","SUCCESS_MESSAGE","ERROR_MESSAGE","getEmployeeList","payload","type","employeeList","get","then","res","data","err","response","msg","id","text","employeeActionWatcher"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,SACEC,kBADF,EAGEC,0BAHF,EAIEC,uBAJF,EAKEC,WALF,QAMO,mCANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,2BAA/C;AAEA,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAuC;AAC5C,QAAMV,GAAG,CAAC;AAAEW,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAT;;AACA,MAAI;AACF,UAAMO,YAAY,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,aAAX,EAAyBH,OAAzB,EAAkCI,IAAlC,CACxBC,GAAD,IAASA,GAAG,CAACC,IADY,CAA3B;AAIA,UAAMhB,GAAG,CAAC;AAAEW,MAAAA,IAAI,EAAER,0BAAR;AAAoCO,MAAAA,OAAO,EAAEE;AAA7C,KAAD,CAAT;AACD,GAND,CAME,OAAOK,GAAP,EAAY;AACZ,UAAMjB,GAAG,CAAC;AAAEW,MAAAA,IAAI,EAAEP,uBAAR;AAAiCM,MAAAA,OAAO,EAAEO,GAAG,CAACC,QAAJ,CAAaF;AAAvD,KAAD,CAAT;AACA,QAAIG,GAAG,GAAG;AACRC,MAAAA,EAAE,EAAE,CADI;AAERC,MAAAA,IAAI,EAAE;AAFE,KAAV;AAIA,UAAMrB,GAAG,CAAC;AAAEW,MAAAA,IAAI,EAAEH,aAAR;AAAuBE,MAAAA,OAAO,EAAES;AAAhC,KAAD,CAAT;AACD;;AACD,QAAMnB,GAAG,CAAC;AAAEW,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAT;AACD;AAED,OAAO,UAAUiB,qBAAV,GAAkC;AACvC,QAAMrB,UAAU,CAACC,kBAAD,EAAqBO,eAArB,CAAhB;AACD","sourcesContent":["import { put, takeLatest } from \"redux-saga/effects\";\nimport {\n  GET_EMPLOYEES_LIST,\n \n  GET_EMPLOYEES_LIST_SUCCESS,\n  GET_EMPLOYEES_LIST_FAIL,\n  SET_LOADING,\n} from \"../actions/employee/employeeTypes\";\nimport Axios from \"axios\";\nimport { SUCCESS_MESSAGE, ERROR_MESSAGE } from \"../actions/auth/authTypes\";\n\nexport function* getEmployeeList({ payload }) {\n  yield put({ type: SET_LOADING });\n  try {\n    const employeeList = yield Axios.get(`/employees/`, payload).then(\n      (res) => res.data\n    );\n\n    yield put({ type: GET_EMPLOYEES_LIST_SUCCESS, payload: employeeList });\n  } catch (err) {\n    yield put({ type: GET_EMPLOYEES_LIST_FAIL, payload: err.response.data });\n    let msg = {\n      id: 1,\n      text: \"Failed to process request\",\n    };\n    yield put({ type: ERROR_MESSAGE, payload: msg });\n  }\n  yield put({ type: SET_LOADING });\n}\n\nexport function* employeeActionWatcher() {\n  yield takeLatest(GET_EMPLOYEES_LIST, getEmployeeList);\n}\n"]},"metadata":{},"sourceType":"module"}