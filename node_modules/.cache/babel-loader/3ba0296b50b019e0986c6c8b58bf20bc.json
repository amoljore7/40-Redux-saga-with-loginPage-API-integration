{"ast":null,"code":"var _jsxFileName = \"/home/amol/Desktop/HRA/src/components/pages/editemployee/EditEmployee.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Card, Button, Tabs, DatePicker, Input, Select, AutoComplete } from \"antd\";\nimport { editEmployee, getEmployeeDetails, addEmployee, getEmployeeList } from \"../../../actions/employee/employeeActions\";\nimport PropTypes from \"prop-types\";\nimport { designations, statusList, empTypes, units } from \"../../utils/optionsList\";\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"antd\";\nimport moment from \"moment\";\nimport { Spin } from \"antd\";\nconst {\n  TabPane\n} = Tabs;\nconst {\n  Option\n} = Select;\n\nconst EditEmployee = props => {\n  const [empData, setEmpData] = useState({});\n  const [locationArray] = useState(props.location);\n  const [projectArray] = useState(props.projects);\n  const [loading, setLoading] = useState(true);\n  const [spin, setSpin] = useState(false);\n  const [editParams, setEditParams] = useState({});\n  useEffect(() => {\n    if (props.empid) {\n      props.getEmployeeDetails(props.empid);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (props.empid) {\n      if (Object.keys(props.employee.employeeDetails).length > 0) {\n        if (props.employee.employeeDetails.EMPID === props.empid) {\n          setEmpData(props.employee.employeeDetails);\n          setLoading(false);\n\n          if (props.employee.employeeDetails.STATUS === \"Offboarded\") {\n            setEditParams({ ...editParams,\n              STATUS: props.employee.employeeDetails.STATUS\n            });\n          }\n        }\n      }\n    }\n  }, [props.employee.employeeDetails]);\n  useEffect(() => {\n    if (props.messages.error.length > 0) {\n      setSpin(false);\n    }\n  }, [props.messages.error]); // useEffect(() => {\n  //    setLoading(true);\n  // }, [props.employee.loading])\n\n  const layout = {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 24\n    }\n  };\n\n  const onFinish = values => {\n    if (props.empid) {\n      const newEmp = { ...editParams,\n        DOB: editParams.DOB && moment(editParams.DOB).format(\"YYYY-MM-DD\"),\n        DOJ: editParams.DOJ && moment(editParams.DOJ).format(\"YYYY-MM-DD\"),\n        LASTWORKINGDATE: editParams.LASTWORKINGDATE && (moment(editParams.LASTWORKINGDATE).format(\"YYYY-MM-DD\") === \"Invalid date\" ? null : moment(editParams.LASTWORKINGDATE).format(\"YYYY-MM-DD\")),\n        ID: props.empid\n      };\n      setSpin(true);\n      props.editEmployee(newEmp);\n    } else {\n      const newEmp = { ...values,\n        DOB: moment(values.DOB).format(\"YYYY-MM-DD\"),\n        DOJ: moment(values.DOJ).format(\"YYYY-MM-DD\")\n      };\n      setSpin(true);\n      props.addEmployee(newEmp);\n    }\n  };\n\n  const onFinishFailed = () => {};\n\n  const [form] = Form.useForm();\n\n  const handleManagerSearch = value => {\n    if (value.length % 2 === 0) {\n      const payload = {\n        params: {\n          limit: 20,\n          search: value\n        },\n        forManager: true\n      };\n      props.getEmployeeList(payload);\n    }\n  };\n\n  const {\n    managerList\n  } = props.employee;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, props.empid ? \"Edit Employee Details\" : \"Add Employee Details\"), /*#__PURE__*/React.createElement(Spin, {\n    spinning: spin,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: empData.FIRSTNAME && empData.FIRSTNAME + \" \" + empData.LASTNAME,\n    bordered: true,\n    className: \"my-3\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n    size: \"middle\",\n    name: \"basic\",\n    form: form,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    initialValues: props.empid ? {\n      FIRSTNAME: empData.FIRSTNAME,\n      MIDDLENAME: empData.MIDDLENAME,\n      LASTNAME: empData.LASTNAME,\n      GENDER: empData.GENDER,\n      EMAIL: empData.EMAIL,\n      MOBILENUMBER: empData.MOBILENUMBER,\n      CAREERTRACK: empData.CAREERTRACK,\n      EMPTYPE: empData.EMPTYPE,\n      DOB: moment(empData.DOB),\n      DOJ: moment(empData.DOJ),\n      DESIGNATION: empData.DESIGNATION,\n      STATUS: empData.STATUS,\n      UNIT: empData.UNIT,\n      DEPARTMENT: empData.DEPARTMENT,\n      MANAGER: empData.MANAGER,\n      SEATID: empData.SEATID,\n      CURRENTLOCATION: empData.CURRENTLOCATION && empData.CURRENTLOCATION.ID,\n      BASELOCATION: empData.BASELOCATION && empData.BASELOCATION.ID,\n      PROJECTS: empData.PROJECTS && empData.PROJECTS.ID,\n      EXTENSIONNUMBER: empData.EXTENSIONNUMBER,\n      LASTWORKINGDATE: empData.LASTWORKINGDATE !== null ? moment(empData.LASTWORKINGDATE) : null\n    } : {\n      STATUS: \"Onboarded\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Personal Details\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, \"First Name\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"red-astriek\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, \"*\"), \" \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"FIRSTNAME\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: \"Please input Firstname!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"firstname\",\n    onChange: e => setEditParams({ ...editParams,\n      FIRSTNAME: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, \"Middle Name \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"MIDDLENAME\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"middlename\",\n    onChange: e => setEditParams({ ...editParams,\n      MIDDLENAME: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, \"Last Name\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"red-astriek\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 32\n    }\n  }, \"*\"), \" \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"LASTNAME\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: \"Please input Lastname!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"lastname\",\n    onChange: e => setEditParams({ ...editParams,\n      LASTNAME: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, \"Gender\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"red-astriek\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 29\n    }\n  }, \"*\"), \" \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"GENDER\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: \"Please select Gender!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Gender\",\n    onChange: value => setEditParams({ ...editParams,\n      GENDER: value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"Male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, \"Male\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"Female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  }, \"Female\")))), props.empid && /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 23\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"EMAIL\",\n    rules: [{\n      type: \"email\",\n      message: \"Email is not Valid!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"email\",\n    disabled: true,\n    onChange: e => setEditParams({ ...editParams,\n      EMAIL: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, \"Mobile\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"red-astriek\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  }, \"*\"), \" \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"MOBILENUMBER\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: \"Please enter Mobile Number!\"\n    }, {\n      min: 10,\n      message: \"Minimum length should be 10\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    autoComplete: \"off\",\n    onChange: e => setEditParams({ ...editParams,\n      MOBILENUMBER: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }\n  }, \"Date of Birth\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"red-astriek\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 36\n    }\n  }, \"*\"), \" \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"DOB\",\n    rules: [{\n      type: \"object\",\n      required: true,\n      message: \"Please input your DOB\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    onChange: (date, dateString) => setEditParams({ ...editParams,\n      DOB: date\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 23\n    }\n  }))))), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Business Details\",\n    key: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }, \"Careertrack\"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"CAREERTRACK\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"careertrack\",\n    onChange: e => setEditParams({ ...editParams,\n      CAREERTRACK: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 21\n    }\n  }, \"Department Name \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"DEPARTMENT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Department Name\",\n    onChange: e => setEditParams({ ...editParams,\n      DEPARTMENT: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }, \"Manager \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"MANAGER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AutoComplete, {\n    onSearch: handleManagerSearch,\n    placeholder: \"Manager\",\n    onSelect: value => setEditParams({ ...editParams,\n      MANAGER: value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 23\n    }\n  }, managerList.results && managerList.results.map(emp => /*#__PURE__*/React.createElement(Option, {\n    key: emp.ID,\n    value: emp.EMPID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 28\n    }\n  }, emp.FIRSTNAME + ' ' + emp.LASTNAME))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 21\n    }\n  }, \"Employee Type\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"red-astriek\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 36\n    }\n  }, \"*\"), \" \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"EMPTYPE\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: \"Please select Employee Type!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Employee Type\",\n    onChange: value => setEditParams({ ...editParams,\n      EMPTYPE: value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 23\n    }\n  }, empTypes.map(empType => /*#__PURE__*/React.createElement(Option, {\n    key: empType.id,\n    value: empType.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 27\n    }\n  }, empType.name))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 21\n    }\n  }, \"Designation\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"red-astriek\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 34\n    }\n  }, \"*\"), \" \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"DESIGNATION\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: \"Please select Designation!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Designation\",\n    onChange: value => setEditParams({ ...editParams,\n      DESIGNATION: value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 23\n    }\n  }, designations.map(designation => /*#__PURE__*/React.createElement(Option, {\n    key: designation.id,\n    value: designation.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 27\n    }\n  }, designation.name))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 21\n    }\n  }, \"Status \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"STATUS\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: \"Please select Status!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Status\",\n    onChange: value => setEditParams({ ...editParams,\n      STATUS: value\n    }),\n    disabled: props.empid ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 23\n    }\n  }, statusList.map(sts => /*#__PURE__*/React.createElement(Option, {\n    key: sts.id,\n    value: sts.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 27\n    }\n  }, sts.name))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 21\n    }\n  }, \"UNIT \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"UNIT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Unit\",\n    onChange: value => setEditParams({ ...editParams,\n      UNIT: value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 23\n    }\n  }, units.map(unit => /*#__PURE__*/React.createElement(Option, {\n    key: unit.id,\n    value: unit.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 27\n    }\n  }, unit.name))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 21\n    }\n  }, \"Project \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"PROJECTS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select project\",\n    onChange: value => setEditParams({ ...editParams,\n      PROJECTS: value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 23\n    }\n  }, projectArray && projectArray.map(data => /*#__PURE__*/React.createElement(Option, {\n    value: data.ID,\n    key: data.ID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 29\n    }\n  }, data.NAME ? data.NAME : \"\"))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 21\n    }\n  }, \"Base Location \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"BASELOCATION\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Base Location\",\n    onChange: value => setEditParams({ ...editParams,\n      BASELOCATION: value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 23\n    }\n  }, locationArray.map(data => /*#__PURE__*/React.createElement(Option, {\n    value: data.value,\n    key: data.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 27\n    }\n  }, data.text))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 21\n    }\n  }, \"Current Location \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"CURRENTLOCATION\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Current Location\",\n    onChange: value => setEditParams({ ...editParams,\n      CURRENTLOCATION: value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 23\n    }\n  }, locationArray.map(data => /*#__PURE__*/React.createElement(Option, {\n    value: data.value,\n    key: data.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 27\n    }\n  }, data.text))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 21\n    }\n  }, \"Seat No \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"SEATID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Seat No\",\n    onChange: e => setEditParams({ ...editParams,\n      SEATID: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 21\n    }\n  }, \"Extension No \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"EXTENSIONNUMBER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Extension No\",\n    onChange: e => setEditParams({ ...editParams,\n      EXTENSIONNUMBER: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 21\n    }\n  }, \"Date of Joining\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"red-astriek\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 38\n    }\n  }, \"*\"), \" \"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"DOJ\",\n    rules: [{\n      type: \"object\",\n      required: true,\n      message: \"Please input your DOJ\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    onChange: date => setEditParams({ ...editParams,\n      DOJ: date\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 23\n    }\n  }))), editParams.STATUS === \"Offboarded\" && /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 23\n    }\n  }, \"Last Working Date\"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"LASTWORKINGDATE\",\n    rules: [{\n      type: \"object\",\n      required: true,\n      message: \"Please input LWD\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    onChange: date => setEditParams({ ...editParams,\n      LASTWORKINGDATE: date\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 25\n    }\n  })))))), /*#__PURE__*/React.createElement(Row, {\n    justify: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    className: \"m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 17\n    }\n  }, props.empid ? \"Update\" : \"Submit\")))))));\n};\n\nEditEmployee.propTypes = {\n  empid: PropTypes.string,\n  editEmployee: PropTypes.func.isRequired,\n  getEmployeeDetails: PropTypes.func.isRequired,\n  addEmployee: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n  employee: PropTypes.object,\n  projects: PropTypes.array,\n  location: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  messages: state.messages,\n  employee: state.employee\n});\n\nexport default connect(mapStateToProps, {\n  editEmployee,\n  getEmployeeDetails,\n  addEmployee,\n  getEmployeeList\n})(EditEmployee);","map":{"version":3,"sources":["/home/amol/Desktop/HRA/src/components/pages/editemployee/EditEmployee.js"],"names":["React","useEffect","useState","Form","Card","Button","Tabs","DatePicker","Input","Select","AutoComplete","editEmployee","getEmployeeDetails","addEmployee","getEmployeeList","PropTypes","designations","statusList","empTypes","units","connect","Row","Col","moment","Spin","TabPane","Option","EditEmployee","props","empData","setEmpData","locationArray","location","projectArray","projects","loading","setLoading","spin","setSpin","editParams","setEditParams","empid","Object","keys","employee","employeeDetails","length","EMPID","STATUS","messages","error","layout","labelCol","span","wrapperCol","onFinish","values","newEmp","DOB","format","DOJ","LASTWORKINGDATE","ID","onFinishFailed","form","useForm","handleManagerSearch","value","payload","params","limit","search","forManager","managerList","FIRSTNAME","LASTNAME","MIDDLENAME","GENDER","EMAIL","MOBILENUMBER","CAREERTRACK","EMPTYPE","DESIGNATION","UNIT","DEPARTMENT","MANAGER","SEATID","CURRENTLOCATION","BASELOCATION","PROJECTS","EXTENSIONNUMBER","xs","sm","md","lg","required","message","e","target","type","min","date","dateString","results","map","emp","empType","id","name","designation","sts","unit","data","NAME","text","propTypes","string","func","isRequired","object","array","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Card, Button, Tabs, DatePicker, Input, Select, AutoComplete } from \"antd\";\nimport {\n  editEmployee,\n  getEmployeeDetails,\n  addEmployee,\n  getEmployeeList\n} from \"../../../actions/employee/employeeActions\";\nimport PropTypes from \"prop-types\";\n\nimport { designations, statusList, empTypes, units } from \"../../utils/optionsList\";\n\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"antd\";\nimport moment from \"moment\";\nimport { Spin } from \"antd\";\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nconst EditEmployee = (props) => {\n  const [empData, setEmpData] = useState({});\n  const [locationArray] = useState(props.location);\n  const [projectArray] = useState(props.projects);\n  const [loading, setLoading] = useState(true);\n  const [spin, setSpin] = useState(false);\n  const [editParams, setEditParams] = useState({});\n\n  useEffect(() => {\n    if (props.empid) {\n      props.getEmployeeDetails(props.empid);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (props.empid) {\n      if (Object.keys(props.employee.employeeDetails).length > 0) {\n        if (props.employee.employeeDetails.EMPID === props.empid) {\n          setEmpData(props.employee.employeeDetails);\n          setLoading(false);\n          if (props.employee.employeeDetails.STATUS === \"Offboarded\") {\n            setEditParams({\n              ...editParams,\n              STATUS: props.employee.employeeDetails.STATUS,\n            });\n          }\n        }\n      }\n    }\n  }, [props.employee.employeeDetails]);\n\n  useEffect(() => {\n    if (props.messages.error.length > 0) {\n      setSpin(false);\n    }\n  }, [props.messages.error]);\n\n  // useEffect(() => {\n  //    setLoading(true);\n  // }, [props.employee.loading])\n\n  const layout = {\n    labelCol: {\n      span: 4,\n    },\n    wrapperCol: {\n      span: 24,\n    },\n  };\n  const onFinish = (values) => {\n    if (props.empid) {\n      const newEmp = {\n        ...editParams,\n        DOB: editParams.DOB && moment(editParams.DOB).format(\"YYYY-MM-DD\"),\n        DOJ: editParams.DOJ && moment(editParams.DOJ).format(\"YYYY-MM-DD\"),\n        LASTWORKINGDATE:\n          editParams.LASTWORKINGDATE &&\n          (moment(editParams.LASTWORKINGDATE).format(\"YYYY-MM-DD\") === \"Invalid date\"\n            ? null\n            : moment(editParams.LASTWORKINGDATE).format(\"YYYY-MM-DD\")),\n        ID: props.empid,\n      };\n      setSpin(true);\n      props.editEmployee(newEmp);\n    } else {\n      const newEmp = {\n        ...values,\n        DOB: moment(values.DOB).format(\"YYYY-MM-DD\"),\n        DOJ: moment(values.DOJ).format(\"YYYY-MM-DD\"),\n      };\n      setSpin(true);\n      props.addEmployee(newEmp);\n    }\n  };\n\n  const onFinishFailed = () => {};\n  const [form] = Form.useForm();\n\n   const handleManagerSearch = value => {\n      if (value.length % 2 === 0) {\n         const payload = {\n            params: {\n              limit: 20,\n              search: value,\n            },\n            forManager:true\n         };\n         props.getEmployeeList(payload);\n      }\n   };\n   const {managerList} = props.employee;\n  return (\n    <div>\n      <h2>{props.empid ? \"Edit Employee Details\" : \"Add Employee Details\"}</h2>\n      <Spin spinning={spin} size=\"large\">\n        <Card\n          title={empData.FIRSTNAME && empData.FIRSTNAME + \" \" + empData.LASTNAME}\n          bordered={true}\n          className=\"my-3\"\n          loading={loading}\n        >\n          <Form\n            {...layout}\n            size=\"middle\"\n            name=\"basic\"\n            form={form}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            initialValues={\n              props.empid\n                ? {\n                    FIRSTNAME: empData.FIRSTNAME,\n                    MIDDLENAME: empData.MIDDLENAME,\n                    LASTNAME: empData.LASTNAME,\n                    GENDER: empData.GENDER,\n                    EMAIL: empData.EMAIL,\n                    MOBILENUMBER: empData.MOBILENUMBER,\n                    CAREERTRACK: empData.CAREERTRACK,\n                    EMPTYPE: empData.EMPTYPE,\n                    DOB: moment(empData.DOB),\n                    DOJ: moment(empData.DOJ),\n                    DESIGNATION: empData.DESIGNATION,\n                    STATUS: empData.STATUS,\n                    UNIT: empData.UNIT,\n                    DEPARTMENT: empData.DEPARTMENT,\n                    MANAGER: empData.MANAGER,\n                    SEATID: empData.SEATID,\n                    CURRENTLOCATION:\n                      empData.CURRENTLOCATION && empData.CURRENTLOCATION.ID,\n                    BASELOCATION: empData.BASELOCATION && empData.BASELOCATION.ID,\n                    PROJECTS: empData.PROJECTS && empData.PROJECTS.ID,\n                    EXTENSIONNUMBER: empData.EXTENSIONNUMBER,\n                    LASTWORKINGDATE:\n                      empData.LASTWORKINGDATE !== null\n                        ? moment(empData.LASTWORKINGDATE)\n                        : null,\n                  }\n                : { STATUS: \"Onboarded\" }\n            }\n          >\n            <Tabs defaultActiveKey=\"1\">\n              <TabPane tab=\"Personal Details\" key=\"1\">\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>\n                      First Name<span className=\"red-astriek\">*</span>{\" \"}\n                    </label>\n                    <Form.Item\n                      name=\"FIRSTNAME\"\n                      hasFeedback\n                      rules={[\n                        { required: true, message: \"Please input Firstname!\" },\n                      ]}\n                    >\n                      <Input\n                        placeholder=\"firstname\"\n                        onChange={(e) =>\n                          setEditParams({ ...editParams, FIRSTNAME: e.target.value })\n                        }\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>Middle Name </label>\n                    <Form.Item name=\"MIDDLENAME\">\n                      <Input\n                        placeholder=\"middlename\"\n                        onChange={(e) =>\n                          setEditParams({\n                            ...editParams,\n                            MIDDLENAME: e.target.value,\n                          })\n                        }\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>\n                      Last Name<span className=\"red-astriek\">*</span>{\" \"}\n                    </label>\n                    <Form.Item\n                      name=\"LASTNAME\"\n                      hasFeedback\n                      rules={[{ required: true, message: \"Please input Lastname!\" }]}\n                    >\n                      <Input\n                        placeholder=\"lastname\"\n                        onChange={(e) =>\n                          setEditParams({ ...editParams, LASTNAME: e.target.value })\n                        }\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>\n                      Gender<span className=\"red-astriek\">*</span>{\" \"}\n                    </label>\n                    <Form.Item\n                      name=\"GENDER\"\n                      hasFeedback\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please select Gender!\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"Select Gender\"\n                        onChange={(value) =>\n                          setEditParams({ ...editParams, GENDER: value })\n                        }\n                      >\n                        <Option value=\"Male\">Male</Option>\n                        <Option value=\"Female\">Female</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  {props.empid && (\n                    <Col className=\"gutter-row\" span={12}>\n                      <label>Email</label>\n                      <Form.Item\n                        name=\"EMAIL\"\n                        rules={[{ type: \"email\", message: \"Email is not Valid!\" }]}\n                      >\n                        <Input\n                          placeholder=\"email\"\n                          disabled\n                          onChange={(e) =>\n                            setEditParams({ ...editParams, EMAIL: e.target.value })\n                          }\n                        />\n                      </Form.Item>\n                    </Col>\n                  )}\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>\n                      Mobile<span className=\"red-astriek\">*</span>{\" \"}\n                    </label>\n                    <Form.Item\n                      name=\"MOBILENUMBER\"\n                      hasFeedback\n                      rules={[\n                        { required: true, message: \"Please enter Mobile Number!\" },\n                        { min: 10, message: \"Minimum length should be 10\" },\n                      ]}\n                    >\n                      <Input\n                        type=\"number\"\n                        autoComplete=\"off\"\n                        onChange={(e) =>\n                          setEditParams({\n                            ...editParams,\n                            MOBILENUMBER: e.target.value,\n                          })\n                        }\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>\n                      Date of Birth<span className=\"red-astriek\">*</span>{\" \"}\n                    </label>\n                    <Form.Item\n                      name=\"DOB\"\n                      rules={[\n                        {\n                          type: \"object\",\n                          required: true,\n                          message: \"Please input your DOB\",\n                        },\n                      ]}\n                    >\n                      <DatePicker\n                        onChange={(date, dateString) =>\n                          setEditParams({ ...editParams, DOB: date })\n                        }\n                      />\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </TabPane>\n\n              <TabPane tab=\"Business Details\" key=\"2\">\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>Careertrack</label>\n                    <Form.Item name=\"CAREERTRACK\">\n                      <Input\n                        placeholder=\"careertrack\"\n                        onChange={(e) =>\n                          setEditParams({\n                            ...editParams,\n                            CAREERTRACK: e.target.value,\n                          })\n                        }\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>Department Name </label>\n                    <Form.Item name=\"DEPARTMENT\">\n                      <Input\n                        placeholder=\"Department Name\"\n                        onChange={(e) =>\n                          setEditParams({\n                            ...editParams,\n                            DEPARTMENT: e.target.value,\n                          })\n                        }\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>Manager </label>\n                    <Form.Item name=\"MANAGER\">\n                      <AutoComplete\n                        onSearch={handleManagerSearch}\n                        placeholder=\"Manager\"\n                        onSelect={(value) => setEditParams({ ...editParams, MANAGER: value })}\n                      >\n                        {managerList.results && managerList.results.map(emp => (\n                           <Option key={emp.ID} value={emp.EMPID}>\n                              {emp.FIRSTNAME+' '+emp.LASTNAME}\n                           </Option>\n                        ))}\n                     </AutoComplete>\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>\n                      Employee Type<span className=\"red-astriek\">*</span>{\" \"}\n                    </label>\n                    <Form.Item\n                      name=\"EMPTYPE\"\n                      hasFeedback\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please select Employee Type!\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"Select Employee Type\"\n                        onChange={(value) =>\n                          setEditParams({ ...editParams, EMPTYPE: value })\n                        }\n                      >\n                        {empTypes.map((empType) => (\n                          <Option key={empType.id} value={empType.value}>\n                            {empType.name}\n                          </Option>\n                        ))}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>\n                      Designation<span className=\"red-astriek\">*</span>{\" \"}\n                    </label>\n                    <Form.Item\n                      name=\"DESIGNATION\"\n                      hasFeedback\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please select Designation!\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"Select Designation\"\n                        onChange={(value) =>\n                          setEditParams({ ...editParams, DESIGNATION: value })\n                        }\n                      >\n                        {designations.map((designation) => (\n                          <Option key={designation.id} value={designation.value}>\n                            {designation.name}\n                          </Option>\n                        ))}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>Status </label>\n                    <Form.Item\n                      name=\"STATUS\"\n                      hasFeedback\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please select Status!\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"Select Status\"\n                        onChange={(value) =>\n                          setEditParams({ ...editParams, STATUS: value })\n                        }\n                        disabled={props.empid ? false : true}\n                      >\n                        {statusList.map((sts) => (\n                          <Option key={sts.id} value={sts.value}>\n                            {sts.name}\n                          </Option>\n                        ))}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>UNIT </label>\n                    <Form.Item name=\"UNIT\">\n                      <Select\n                        placeholder=\"Select Unit\"\n                        onChange={(value) =>\n                          setEditParams({ ...editParams, UNIT: value })\n                        }\n                      >\n                        {units.map((unit) => (\n                          <Option key={unit.id} value={unit.value}>\n                            {unit.name}\n                          </Option>\n                        ))}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>Project </label>\n                    <Form.Item name=\"PROJECTS\">\n                      <Select\n                        placeholder=\"Select project\"\n                        onChange={(value) =>\n                          setEditParams({ ...editParams, PROJECTS: value })\n                        }\n                      >\n                        {projectArray &&\n                          projectArray.map((data) => (\n                            <Option value={data.ID} key={data.ID}>\n                              {data.NAME ? data.NAME : \"\"}\n                            </Option>\n                          ))}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>Base Location </label>\n                    <Form.Item name=\"BASELOCATION\">\n                      <Select\n                        placeholder=\"Select Base Location\"\n                        onChange={(value) =>\n                          setEditParams({ ...editParams, BASELOCATION: value })\n                        }\n                      >\n                        {locationArray.map((data) => (\n                          <Option value={data.value} key={data.value}>\n                            {data.text}\n                          </Option>\n                        ))}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>Current Location </label>\n                    <Form.Item name=\"CURRENTLOCATION\">\n                      <Select\n                        placeholder=\"Select Current Location\"\n                        onChange={(value) =>\n                          setEditParams({ ...editParams, CURRENTLOCATION: value })\n                        }\n                      >\n                        {locationArray.map((data) => (\n                          <Option value={data.value} key={data.value}>\n                            {data.text}\n                          </Option>\n                        ))}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>Seat No </label>\n                    <Form.Item name=\"SEATID\">\n                      <Input\n                        placeholder=\"Seat No\"\n                        onChange={(e) =>\n                          setEditParams({ ...editParams, SEATID: e.target.value })\n                        }\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>Extension No </label>\n                    <Form.Item name=\"EXTENSIONNUMBER\">\n                      <Input\n                        placeholder=\"Extension No\"\n                        onChange={(e) =>\n                          setEditParams({\n                            ...editParams,\n                            EXTENSIONNUMBER: e.target.value,\n                          })\n                        }\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"gutter-row\" span={12}>\n                    <label>\n                      Date of Joining<span className=\"red-astriek\">*</span>{\" \"}\n                    </label>\n                    <Form.Item\n                      name=\"DOJ\"\n                      rules={[\n                        {\n                          type: \"object\",\n                          required: true,\n                          message: \"Please input your DOJ\",\n                        },\n                      ]}\n                    >\n                      <DatePicker\n                        onChange={(date) =>\n                          setEditParams({ ...editParams, DOJ: date })\n                        }\n                      />\n                    </Form.Item>\n                  </Col>\n                  {editParams.STATUS === \"Offboarded\" && (\n                    <Col className=\"gutter-row\" span={12}>\n                      <label>Last Working Date</label>\n                      <Form.Item\n                        name=\"LASTWORKINGDATE\"\n                        rules={[\n                          {\n                            type: \"object\",\n                            required: true,\n                            message: \"Please input LWD\",\n                          },\n                        ]}\n                      >\n                        <DatePicker\n                          onChange={(date) =>\n                            setEditParams({ ...editParams, LASTWORKINGDATE: date })\n                          }\n                        />\n                      </Form.Item>\n                    </Col>\n                  )}\n                </Row>\n              </TabPane>\n            </Tabs>\n            <Row justify=\"end\">\n              <Form.Item className=\"m-1\">\n                <Button type=\"primary\" htmlType=\"submit\">\n                  {props.empid ? \"Update\" : \"Submit\"}\n                </Button>\n              </Form.Item>\n            </Row>\n          </Form>\n        </Card>\n      </Spin>\n    </div>\n  );\n};\nEditEmployee.propTypes = {\n  empid: PropTypes.string,\n  editEmployee: PropTypes.func.isRequired,\n  getEmployeeDetails: PropTypes.func.isRequired,\n  addEmployee: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n  employee: PropTypes.object,\n  projects: PropTypes.array,\n  location: PropTypes.array,\n};\nconst mapStateToProps = (state) => ({\n  messages: state.messages,\n  employee: state.employee,\n});\nexport default connect(mapStateToProps, {\n  editEmployee,\n  getEmployeeDetails,\n  addEmployee,\n  getEmployeeList\n})(EditEmployee);\n"]},"metadata":{},"sourceType":"module"}