{"ast":null,"code":"import { put, takeLatest } from \"redux-saga/effects\";\nimport { GET_EMPLOYEES_LIST, GET_SINGLE_EMPLOYEE, ADD_EMPLOYEE, ADD_EMPLOYEES_LIST, GET_EMPLOYEES_LIST_SUCCESS, GET_EMPLOYEES_LIST_FAIL, GET_SINGLE_EMPLOYEE_SUCCESS, GET_SINGLE_EMPLOYEE_FAIL, ADD_EMPLOYEE_SUCCESS, ADD_EMPLOYEES_LIST_SUCCESS, ADD_EMPLOYEES_LIST_FAIL, ADD_EMPLOYEE_FAIL, SET_LOADING, EDIT_EMPLOYEE, EDIT_EMPLOYEE_SUCCESS, EDIT_EMPLOYEE_FAIL } from \"../actions/employee/employeeTypes\";\nimport Axios from \"axios\";\nconst EmpID = localStorage.getItem('EmpID');\n\nfunction* getEmployeeList() {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const employeeList = yield fetch(`https://`).then(response => response.json());\n    yield put({\n      type: GET_EMPLOYEES_LIST_SUCCESS,\n      payload: employeeList\n    });\n  } catch (e) {\n    yield put({\n      type: GET_EMPLOYEES_LIST_FAIL,\n      payload: e.message\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\n\nfunction* getEmployeeDetails({\n  payload\n}) {\n  try {\n    const employeeDetails = yield Axios.get(`/employees/${payload}`).then(res => res.data);\n    console.log(employeeDetails);\n\n    if (employeeDetails) {\n      yield put({\n        type: GET_SINGLE_EMPLOYEE_SUCCESS,\n        payload: employeeDetails\n      });\n    } else {\n      yield put({\n        type: GET_SINGLE_EMPLOYEE_FAIL,\n        payload: employeeDetails\n      });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* addEmployee({\n  payload\n}) {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const employee = yield Axios.post(\"/employees/\", payload).then(res => res.data).catch(err => err);\n    yield put({\n      type: ADD_EMPLOYEE_SUCCESS,\n      payload: employee\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_EMPLOYEE_FAIL,\n      payload: e.message\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\n\nfunction* addEmployeeList() {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const employeeList = yield fetch(`https://`).then(response => response.json());\n    yield put({\n      type: ADD_EMPLOYEES_LIST_SUCCESS,\n      payload: employeeList\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_EMPLOYEES_LIST_FAIL,\n      payload: e.message\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\n\nfunction* editEmployee({\n  payload\n}) {\n  yield put({\n    type: SET_LOADING\n  });\n\n  try {\n    const employee = yield Axios.put(`/employees/${2}`, payload).then(res => res.data).catch(err => err);\n    console.log(\">>>>>>>EDIT>>>>>\", employee);\n    yield put({\n      type: EDIT_EMPLOYEE_SUCCESS,\n      payload: employee\n    });\n  } catch (e) {\n    yield put({\n      type: EDIT_EMPLOYEE_FAIL,\n      payload: e.message\n    });\n  }\n\n  yield put({\n    type: SET_LOADING\n  });\n}\n\nexport function* employeeActionWatcher() {\n  yield takeLatest(GET_EMPLOYEES_LIST, getEmployeeList);\n  yield takeLatest(GET_SINGLE_EMPLOYEE, getEmployeeDetails);\n  yield takeLatest(ADD_EMPLOYEE, addEmployee);\n  yield takeLatest(ADD_EMPLOYEES_LIST, addEmployeeList);\n  yield takeLatest(EDIT_EMPLOYEE, editEmployee);\n}","map":{"version":3,"sources":["/home/amol/Desktop/HRA/src/sagas/employee.sagas.js"],"names":["put","takeLatest","GET_EMPLOYEES_LIST","GET_SINGLE_EMPLOYEE","ADD_EMPLOYEE","ADD_EMPLOYEES_LIST","GET_EMPLOYEES_LIST_SUCCESS","GET_EMPLOYEES_LIST_FAIL","GET_SINGLE_EMPLOYEE_SUCCESS","GET_SINGLE_EMPLOYEE_FAIL","ADD_EMPLOYEE_SUCCESS","ADD_EMPLOYEES_LIST_SUCCESS","ADD_EMPLOYEES_LIST_FAIL","ADD_EMPLOYEE_FAIL","SET_LOADING","EDIT_EMPLOYEE","EDIT_EMPLOYEE_SUCCESS","EDIT_EMPLOYEE_FAIL","Axios","EmpID","localStorage","getItem","getEmployeeList","type","employeeList","fetch","then","response","json","payload","e","message","getEmployeeDetails","employeeDetails","get","res","data","console","log","addEmployee","employee","post","catch","err","addEmployeeList","editEmployee","employeeActionWatcher"],"mappings":"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","sourcesContent":["import { put, takeLatest } from \"redux-saga/effects\";\nimport {\n  GET_EMPLOYEES_LIST,\n  GET_SINGLE_EMPLOYEE,\n  ADD_EMPLOYEE,\n  ADD_EMPLOYEES_LIST,\n  GET_EMPLOYEES_LIST_SUCCESS,\n  GET_EMPLOYEES_LIST_FAIL,\n  GET_SINGLE_EMPLOYEE_SUCCESS,\n  GET_SINGLE_EMPLOYEE_FAIL,\n  ADD_EMPLOYEE_SUCCESS,\n  ADD_EMPLOYEES_LIST_SUCCESS,\n  ADD_EMPLOYEES_LIST_FAIL,\n  ADD_EMPLOYEE_FAIL,\n  SET_LOADING,\n  EDIT_EMPLOYEE,\n  EDIT_EMPLOYEE_SUCCESS,\n  EDIT_EMPLOYEE_FAIL,\n} from \"../actions/employee/employeeTypes\";\nimport Axios from \"axios\";\n\nconst EmpID = (localStorage.getItem('EmpID'));\nfunction* getEmployeeList() {\n  yield put({ type: SET_LOADING });\n  try {\n    const employeeList = yield fetch(`https://`).then((response) => response.json());\n\n    yield put({ type: GET_EMPLOYEES_LIST_SUCCESS, payload: employeeList });\n  } catch (e) {\n    yield put({ type: GET_EMPLOYEES_LIST_FAIL, payload: e.message });\n  }\n  yield put({ type: SET_LOADING });\n}\n\nfunction* getEmployeeDetails({ payload }) {\n  try {\n    const employeeDetails = yield Axios.get(`/employees/${payload}`).then(\n      (res) => res.data\n    );\n    console.log(employeeDetails);\n    if (employeeDetails) {\n      yield put({ type: GET_SINGLE_EMPLOYEE_SUCCESS, payload: employeeDetails });\n    } else {\n      yield put({ type: GET_SINGLE_EMPLOYEE_FAIL, payload: employeeDetails });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* addEmployee({ payload }) {\n  yield put({ type: SET_LOADING });\n\n  try {\n    const employee = yield Axios.post(\"/employees/\", payload)\n      .then((res) => res.data)\n      .catch((err) => err);\n   \n    yield put({ type: ADD_EMPLOYEE_SUCCESS, payload: employee });\n  } catch (e) {\n    yield put({ type: ADD_EMPLOYEE_FAIL, payload: e.message });\n  }\n  yield put({ type: SET_LOADING });\n}\n\nfunction* addEmployeeList() {\n  yield put({ type: SET_LOADING });\n  try {\n    const employeeList = yield fetch(`https://`).then((response) => response.json());\n\n    yield put({ type: ADD_EMPLOYEES_LIST_SUCCESS, payload: employeeList });\n  } catch (e) {\n    yield put({ type: ADD_EMPLOYEES_LIST_FAIL, payload: e.message });\n  }\n  yield put({ type: SET_LOADING });\n}\nfunction* editEmployee({ payload }) {\n  yield put({ type: SET_LOADING });\n  try {\n    const employee = yield Axios.put(`/employees/${2}`, payload)\n      .then((res) => res.data)\n      .catch((err) => err);\n    console.log(\">>>>>>>EDIT>>>>>\",employee);\n    yield put({ type: EDIT_EMPLOYEE_SUCCESS, payload: employee });\n  } catch (e) {\n    yield put({ type: EDIT_EMPLOYEE_FAIL, payload: e.message });\n  }\n  yield put({ type: SET_LOADING });\n}\n\nexport function* employeeActionWatcher() {\n  yield takeLatest(GET_EMPLOYEES_LIST, getEmployeeList);\n  yield takeLatest(GET_SINGLE_EMPLOYEE, getEmployeeDetails);\n  yield takeLatest(ADD_EMPLOYEE, addEmployee);\n  yield takeLatest(ADD_EMPLOYEES_LIST, addEmployeeList);\n  yield takeLatest(EDIT_EMPLOYEE, editEmployee);\n}\n"]},"metadata":{},"sourceType":"module"}