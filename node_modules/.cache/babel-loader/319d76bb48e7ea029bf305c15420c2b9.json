{"ast":null,"code":"var _jsxFileName = \"/home/amol/Desktop/HRA/src/components/pages/showemployee/ShowEmployee.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Card, Descriptions } from \"antd\";\nimport { getEmployeeDetails } from \"../../../actions/employee/employeeActions\";\nimport { connect } from \"react-redux\";\n\nconst ShowEmployee = props => {\n  const [empData, setEmpData] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    props.getEmployeeDetails(props.empid);\n  }, []);\n  useEffect(() => {\n    if (Object.keys(props.employee.employeeDetails).length > 0) {\n      setEmpData(props.employee.employeeDetails);\n      setLoading(false);\n    }\n  }, [props.employee.employeeDetails]);\n  useEffect(() => {\n    setLoading(props.employee.loading);\n  }, [props.employee.loading]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: empData.FIRSTNAME && empData.FIRSTNAME + \" \" + empData.LASTNAME,\n    bordered: true,\n    className: \"my-3\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Descriptions, {\n    bordered: true,\n    size: \"small\",\n    column: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Emp Id:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, empData.EMPID), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Email:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, empData.EMAIL), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Address:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, empData.CURRENTLOCATION && empData.CURRENTLOCATION.ADDRESS), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Unit:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, empData.UNIT), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Status:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, empData.STATUS), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Date of Joining:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, empData.DOJ), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Current Project:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, empData.PROJECTS && empData.PROJECTS.NAME))));\n};\n\nShowEmployee.propTypes = {\n  getEmployeeDetails: PropTypes.func.isRequired,\n  employee: PropTypes.object,\n  empid: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  employee: state.employee\n});\n\nexport default connect(mapStateToProps, {\n  getEmployeeDetails\n})(ShowEmployee);","map":{"version":3,"sources":["/home/amol/Desktop/HRA/src/components/pages/showemployee/ShowEmployee.js"],"names":["React","useEffect","useState","PropTypes","Card","Descriptions","getEmployeeDetails","connect","ShowEmployee","props","empData","setEmpData","loading","setLoading","empid","Object","keys","employee","employeeDetails","length","FIRSTNAME","LASTNAME","EMPID","EMAIL","CURRENTLOCATION","ADDRESS","UNIT","STATUS","DOJ","PROJECTS","NAME","propTypes","func","isRequired","object","string","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Card, Descriptions } from \"antd\";\nimport { getEmployeeDetails } from \"../../../actions/employee/employeeActions\";\nimport { connect } from \"react-redux\";\n\nconst ShowEmployee = (props) => {\n  const [empData, setEmpData] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    props.getEmployeeDetails(props.empid);\n  }, []);\n\n  useEffect(() => {\n    if (Object.keys(props.employee.employeeDetails).length > 0) {\n      setEmpData(props.employee.employeeDetails);\n      setLoading(false);\n    }\n  }, [props.employee.employeeDetails]);\n\n   useEffect(() => {\n      setLoading(props.employee.loading);\n   }, [props.employee.loading])\n\n  return (\n    <div>\n      <Card\n        title={empData.FIRSTNAME && empData.FIRSTNAME + \" \" + empData.LASTNAME}\n        bordered={true}\n        className=\"my-3\"\n        loading={loading}\n      >\n        <Descriptions bordered size=\"small\" column={1}>\n          <Descriptions.Item label=\"Emp Id:\">{empData.EMPID}</Descriptions.Item>\n          <Descriptions.Item label=\"Email:\">{empData.EMAIL}</Descriptions.Item>\n          <Descriptions.Item label=\"Address:\">\n            {empData.CURRENTLOCATION && empData.CURRENTLOCATION.ADDRESS}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Unit:\">{empData.UNIT}</Descriptions.Item>\n          <Descriptions.Item label=\"Status:\">{empData.STATUS}</Descriptions.Item>\n          <Descriptions.Item label=\"Date of Joining:\">\n            {empData.DOJ}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Current Project:\">\n            {empData.PROJECTS && empData.PROJECTS.NAME}\n          </Descriptions.Item>\n        </Descriptions>\n      </Card>\n    </div>\n  );\n};\n\nShowEmployee.propTypes = {\n   getEmployeeDetails: PropTypes.func.isRequired,\n   employee: PropTypes.object,\n   empid: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n});\n\nexport default connect(mapStateToProps, { getEmployeeDetails })(ShowEmployee);\n"]},"metadata":{},"sourceType":"module"}