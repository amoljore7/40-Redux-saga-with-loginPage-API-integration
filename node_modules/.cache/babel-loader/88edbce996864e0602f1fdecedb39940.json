{"ast":null,"code":"var _jsxFileName = \"/home/amol/Desktop/HRA/src/components/pages/bulkupload/BulkUpload.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Form, Upload, Card, Button, Space } from \"antd\";\nimport Icon from \"@ant-design/icons\";\nimport sample1 from \"../../../constant/sample1.xlsx\";\nimport sample2 from \"../../../constant/sample2.csv\";\nimport { uploadEmployeeList } from \"../../../actions/employee/employeeActions\";\n\nconst BulkUpload = props => {\n  const avatarUpload = file => {\n    console.log(\">>>>>>>>>>>>\", file); // const config = {\n    //   headers: {\n    //     \"content-type\": \"multipart/form-data\",\n    //   },\n    //   body: {\n    //     file: file,\n    //   },\n    // };\n\n    axios.post(`/employees/bulkupload/${file.name}`, config).then(res => console.log(res)).catch(err => console.log(err));\n  };\n\n  const normFile = e => {\n    console.log(\"Upload event:\", e);\n    props.dispatch(uploadEmployeeList(e.file.name));\n\n    if (Array.isArray(e)) {\n      return e;\n    }\n\n    return e && e.fileList;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Upload Employee List\",\n    bordered: true,\n    className: \"my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Select file to upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    name: \"avatar\",\n    action: avatarUpload,\n    listType: \"picture-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-drag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    type: \"inbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"Clique ou arraste um arquivo.\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: sample1,\n    download: \"sample_xlsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Download sample xlsx\"), \"/\", /*#__PURE__*/React.createElement(\"a\", {\n    href: sample2,\n    download: \"sample_csv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Download sample csv\"))))));\n};\n\nBulkUpload.propTypes = {\n  dispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  employee: state.employee\n});\n\nexport default connect(mapStateToProps)(BulkUpload);","map":{"version":3,"sources":["/home/amol/Desktop/HRA/src/components/pages/bulkupload/BulkUpload.js"],"names":["React","PropTypes","axios","connect","Form","Upload","Card","Button","Space","Icon","sample1","sample2","uploadEmployeeList","BulkUpload","props","avatarUpload","file","console","log","post","name","config","then","res","catch","err","normFile","e","dispatch","Array","isArray","fileList","propTypes","func","isRequired","mapStateToProps","state","employee"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,KAArC,QAAkD,MAAlD;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,kBAAT,QAAmC,2CAAnC;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,YAAY,GAAIC,IAAD,IAAU;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,IAA3B,EAD6B,CAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAd,IAAAA,KAAK,CACFiB,IADH,CACS,yBAAwBH,IAAI,CAACI,IAAK,EAD3C,EAC8CC,MAD9C,EAEGC,IAFH,CAESC,GAAD,IAASN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAFjB,EAGGC,KAHH,CAGUC,GAAD,IAASR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAHlB;AAID,GAdD;;AAeA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBV,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BS,CAA7B;AACAb,IAAAA,KAAK,CAACc,QAAN,CAAehB,kBAAkB,CAACe,CAAC,CAACX,IAAF,CAAOI,IAAR,CAAjC;;AACA,QAAIS,KAAK,CAACC,OAAN,CAAcH,CAAd,CAAJ,EAAsB;AACpB,aAAOA,CAAP;AACD;;AACD,WAAOA,CAAC,IAAIA,CAAC,CAACI,QAAd;AACD,GAPD;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,sBAAZ;AAAmC,IAAA,QAAQ,EAAE,IAA7C;AAAmD,IAAA,SAAS,EAAC,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,MAAM,EAAEhB,YAA9B;AAA4C,IAAA,QAAQ,EAAC,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAJF,CADF,CADF,eASE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAEL,OAAT;AAAkB,IAAA,QAAQ,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,oBAKE;AAAG,IAAA,IAAI,EAAEC,OAAT;AAAkB,IAAA,QAAQ,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALF,CAJF,CATF,CADF,CADF,CADF;AA8BD,CAtDD;;AAwDAE,UAAU,CAACmB,SAAX,GAAuB;AACrBJ,EAAAA,QAAQ,EAAE3B,SAAS,CAACgC,IAAV,CAAeC;AADJ,CAAvB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,QAAQ,EAAED,KAAK,CAACC;AADkB,CAAZ,CAAxB;;AAIA,eAAelC,OAAO,CAACgC,eAAD,CAAP,CAAyBtB,UAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Form, Upload, Card, Button, Space } from \"antd\";\nimport Icon from \"@ant-design/icons\";\nimport sample1 from \"../../../constant/sample1.xlsx\";\nimport sample2 from \"../../../constant/sample2.csv\";\nimport { uploadEmployeeList } from \"../../../actions/employee/employeeActions\";\n\nconst BulkUpload = (props) => {\n  const avatarUpload = (file) => {\n    console.log(\">>>>>>>>>>>>\",file);\n    // const config = {\n    //   headers: {\n    //     \"content-type\": \"multipart/form-data\",\n    //   },\n    //   body: {\n    //     file: file,\n    //   },\n    // };\n    axios\n      .post(`/employees/bulkupload/${file.name}`, config)\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n  };\n  const normFile = (e) => {\n    console.log(\"Upload event:\", e);\n    props.dispatch(uploadEmployeeList(e.file.name));\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n  return (\n    <div>\n      <Card title=\"Upload Employee List\" bordered={true} className=\"my-3\">\n        <Form layout=\"vertical\">\n          <Form.Item label=\"Select file to upload\">\n            <Upload name=\"avatar\" action={avatarUpload} listType=\"picture-card\">\n              <p className=\"ant-upload-drag-icon\">\n                <Icon type=\"inbox\" />\n              </p>\n              <p className=\"ant-upload-text\">Clique ou arraste um arquivo.</p>\n            </Upload>\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" block>\n              Upload\n            </Button>\n            <Space>\n              <a href={sample1} download=\"sample_xlsx\">\n                Download sample xlsx\n              </a>\n              /\n              <a href={sample2} download=\"sample_csv\">\n                Download sample csv\n              </a>\n            </Space>\n          </Form.Item>\n        </Form>\n      </Card>\n    </div>\n  );\n};\n\nBulkUpload.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n});\n\nexport default connect(mapStateToProps)(BulkUpload);\n"]},"metadata":{},"sourceType":"module"}